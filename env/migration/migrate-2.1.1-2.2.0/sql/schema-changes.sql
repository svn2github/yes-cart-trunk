--
--  Copyright 2009 Igor Azarnyi, Denys Pavlov
--
--     Licensed under the Apache License, Version 2.0 (the "License");
--     you may not use this file except in compliance with the License.
--     You may obtain a copy of the License at
--
--         http://www.apache.org/licenses/LICENSE-2.0
--
--     Unless required by applicable law or agreed to in writing, software
--     distributed under the License is distributed on an "AS IS" BASIS,
--     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--     See the License for the specific language governing permissions and
--     limitations under the License.
--

--
-- This script is for MySQL only with some Derby hints inline with comments
-- We highly recommend you seek YC's support help when upgrading your system
-- for detailed analysis of your code.
--
-- Upgrades organised in blocks representing JIRA tasks for which they are
-- necessary - potentially you may hand pick the upgrades you required but
-- to keep upgrade process as easy as possible for future we recommend full
-- upgrades
--

--
-- YC-410 Provide centralised storage for ShoppingCart as opposed to cookie
--



    create table TSHOPPINGCARTSTATE (
        TSHOPPINGCARTSTATE_ID bigint not null auto_increment,
        VERSION bigint not null default 0,
        CREATED_TIMESTAMP datetime,
        UPDATED_TIMESTAMP datetime,
        CREATED_BY varchar(64),
        UPDATED_BY varchar(64),
        GUID varchar(36) not null unique,
        CART_STATE varbinary(16384),
        CUSTOMER_EMAIL varchar(255),
        primary key (TSHOPPINGCARTSTATE_ID)
    );

--
--     create table TSHOPPINGCARTSTATE (
--         TSHOPPINGCARTSTATE_ID bigint not null GENERATED BY DEFAULT AS IDENTITY,
--         VERSION bigint not null default 0,
--         CREATED_TIMESTAMP timestamp,
--         UPDATED_TIMESTAMP timestamp,
--         CREATED_BY varchar(64),
--         UPDATED_BY varchar(64),
--         GUID varchar(36) not null unique,
--         CART_STATE blob(16384),
--         CUSTOMER_EMAIL varchar(255),
--         primary key (TSHOPPINGCARTSTATE_ID)
--     );


    create index PROMOTIONCOUPONUSAGE_EMAIL on TPROMOTIONCOUPONUSAGE (CUSTOMER_EMAIL);

    create index SHOPPINGCARTSTATE_EMAIL on TSHOPPINGCARTSTATE (CUSTOMER_EMAIL);


--
-- YC-150 RemoteImageServiceImpl addImageToRepository path resolution review
-- YC-237 Image vault resolution
--

UPDATE TSYSTEMATTRVALUE SET VAL = 'context://../imagevault' WHERE CODE = 'SYSTEM_IMAGE_VAULT';
ALTER TABLE TSHOP DROP COLUMN IMGVAULT;

--
-- YC-423 Add new property to ManagerEntity to allow selection of Shop's manager has access to
--

    create table TMANAGERSHOP (
        MANAGERSHOP_ID bigint not null auto_increment,
        VERSION bigint not null default 0,
        MANAGER_ID bigint not null,
        SHOP_ID bigint not null,
        CREATED_TIMESTAMP datetime,
        UPDATED_TIMESTAMP datetime,
        CREATED_BY varchar(64),
        UPDATED_BY varchar(64),
        GUID varchar(36) not null unique,
        primary key (MANAGERSHOP_ID)
    ) ;


    alter table TMANAGERSHOP
        add index FK_MS_SHOP (SHOP_ID),
        add constraint FK_MS_SHOP
        foreign key (SHOP_ID)
        references TSHOP (SHOP_ID);

    alter table TMANAGERSHOP
        add index FK_MS_MANAGER (MANAGER_ID),
        add constraint FK_MS_MANAGER
        foreign key (MANAGER_ID)
        references TMANAGER (MANAGER_ID)         on delete cascade;


--     create  table TMANAGERSHOP (
--         MANAGERSHOP_ID bigint not null GENERATED BY DEFAULT AS IDENTITY,
--         VERSION bigint not null DEFAULT 0,
--         MANAGER_ID bigint not null,
--         SHOP_ID bigint not null,
--         CREATED_TIMESTAMP timestamp,
--         UPDATED_TIMESTAMP timestamp,
--         CREATED_BY varchar(64),
--         UPDATED_BY varchar(64),
--         GUID varchar(36) not null unique,
--         primary key (MANAGERSHOP_ID)
--     );
--
--
--     alter table TMANAGERSHOP
--         add constraint FK_MS_SHOP
--         foreign key (SHOP_ID)
--         references TSHOP;
--
--
--     alter table TMANAGERSHOP
--         add constraint FK_MS_MANAGER
--         foreign key (MANAGER_ID)
--         references TMANAGER         on delete cascade;

--
--  YC-395 Federated environment for YUM
--

INSERT INTO TROLE (ROLE_ID, GUID, CODE, DESCRIPTION) VALUES (5, 'ROLE_SMCONTENTADMIN',  'ROLE_SMCONTENTADMIN', 'Content manager');
INSERT INTO TROLE (ROLE_ID, GUID, CODE, DESCRIPTION) VALUES (6, 'ROLE_SMMARKETINGADMIN',  'ROLE_SMMARKETINGADMIN', 'Marketing manager');

alter table TCOUNTRY add column DISPLAYNAME varchar(255);
update TCOUNTRY set DISPLAYNAME = NAME;

alter table TSTATE add column DISPLAYNAME varchar(255);
update TSTATE set DISPLAYNAME = NAME;

--
-- YC-428 Allow assignment of shippable countries in Shop preferences
--

INSERT INTO TATTRIBUTE (ATTRIBUTE_ID, GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  10997,  'COUNTRY_SHIP', 'COUNTRY_SHIP',  0,  NULL,  'Countries (Shipping)',  'Supported shipping countries by shop.',  1004, 1001);

INSERT INTO TATTRIBUTE (ATTRIBUTE_ID, GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  10996,  'COUNTRY_BILL', 'COUNTRY_BILL',  0,  NULL,  'Countries (Billing)',  'Supported billing countries by shop.',  1004, 1001);

INSERT INTO TSHOPATTRVALUE(ATTRVALUE_ID,VAL,CODE,SHOP_ID, GUID)  VALUES (13, 'AU,AT,BE,BG,CA,CN,HR,CY,CZ,DK,EE,FI,FR,DE,GR,HK,HU,IE,IM,IT,JP,LV,LT,LU,NL,NZ,NO,PL,PT,RO,RU,SE,CH,TR,UA,GB,US', 'COUNTRY_SHIP', 10, 'COUNTRY_SHIP_10');
INSERT INTO TSHOPATTRVALUE(ATTRVALUE_ID,VAL,CODE,SHOP_ID, GUID)  VALUES (14, 'AU,AT,BE,BG,CA,CN,HR,CY,CZ,DK,EE,FI,FR,DE,GR,HK,HU,IE,IM,IT,JP,LV,LT,LU,NL,NZ,NO,PL,PT,RO,RU,SE,CH,TR,UA,GB,US', 'COUNTRY_BILL', 10, 'COUNTRY_BILL_10');

--
-- YC-425 Allow shop specific configuration for carries and carrier SLA
--


    create table TCARRIERSHOP (
        CARRIERSHOP_ID bigint not null auto_increment,
        VERSION bigint not null default 0,
        CARRIER_ID bigint not null,
        SHOP_ID bigint not null,
        CREATED_TIMESTAMP datetime,
        UPDATED_TIMESTAMP datetime,
        CREATED_BY varchar(64),
        UPDATED_BY varchar(64),
        GUID varchar(36) not null unique,
        primary key (CARRIERSHOP_ID)
    ) ;


    alter table TCARRIERSHOP
        add index FK_CRS_SHOP (SHOP_ID),
        add constraint FK_CRS_SHOP
        foreign key (SHOP_ID)
        references TSHOP (SHOP_ID);

    alter table TCARRIERSHOP
        add index FK_CRS_CARRIER (CARRIER_ID),
        add constraint FK_CRS_CARRIER
        foreign key (CARRIER_ID)
        references TCARRIER (CARRIER_ID)         on delete cascade;


--     create  table TCARRIERSHOP (
--         CARRIERSHOP_ID bigint not null GENERATED BY DEFAULT AS IDENTITY,
--         VERSION bigint not null DEFAULT 0,
--         CARRIER_ID bigint not null,
--         SHOP_ID bigint not null,
--         CREATED_TIMESTAMP timestamp,
--         UPDATED_TIMESTAMP timestamp,
--         CREATED_BY varchar(64),
--         UPDATED_BY varchar(64),
--         GUID varchar(36) not null unique,
--         primary key (CARRIERSHOP_ID)
--     );
--
--
--     alter table TCARRIERSHOP
--         add constraint FK_CRS_SHOP
--         foreign key (SHOP_ID)
--         references TSHOP;
--
--
--     alter table TCARRIERSHOP
--         add constraint FK_CRS_CARRIER
--         foreign key (CARRIER_ID)
--         references TCARRIER         on delete cascade;

INSERT INTO TROLE (ROLE_ID, GUID, CODE, DESCRIPTION) VALUES (7, 'ROLE_SMSHIPPINGADMIN',  'ROLE_SMSHIPPINGADMIN', 'Shipping manager');



--
--  YC-424 Allow shop specific configuration for payment gateways
--

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (58, 'testPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (64, 'courierPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (1198, 'cyberSourcePaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (1298, 'authorizeNetAimPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (164, 'payflowPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (184, 'payPalNvpPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (212, 'authorizeNetSimPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (232, 'payPalExpressPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (4591, 'liqPayPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');

INSERT INTO TPAYMENTGATEWAYPARAMETER (PAYMENTGATEWAYPARAMETER_ID, PG_LABEL, P_LABEL, P_VALUE, P_NAME, P_DESCRIPTION)
VALUES (4691, 'liqPayNoRefundPaymentGateway', 'priority', '100', 'Gateway priority', 'Gateway priority');


INSERT INTO TATTRIBUTE (ATTRIBUTE_ID, GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  10995,  'SHOP_ACTIVE_PAYMENT_GATEWAYS_LABEL', 'SHOP_ACTIVE_PAYMENT_GATEWAYS_LABEL',  0,  NULL,  'Active payment modules',  'Active payment modules',  1004, 1001);

INSERT INTO TSHOPATTRVALUE(ATTRVALUE_ID,VAL,CODE,SHOP_ID, GUID)  VALUES (9, 'testPaymentGatewayLabel,courierPaymentGatewayLabel','SHOP_ACTIVE_PAYMENT_GATEWAYS_LABEL', 10, 'SHOP10_ACTIVE_PAYMENT_GATEWAYS_LABEL');

--
-- YC-427 Add enabled languages configuration for Shop instances
--

INSERT INTO TATTRIBUTE (ATTRIBUTE_ID, GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  10994,  'SUPPORTED_LANGUAGES', 'SUPPORTED_LANGUAGES',  0,  NULL,  'Languages',  'Supported shop languages',  1004, 1001);

--
-- YC-446 Allow selection of payment methods with Carrier SLA
--

alter table TCARRIERSLA add column BILLING_ADDRESS_NOT_REQUIRED bit not null default 0;
alter table TCARRIERSLA add column DELIVERY_ADDRESS_NOT_REQUIRED bit not null default 0;
alter table TCARRIERSLA add column SUPPORTED_PGS varchar(255);

-- alter table TCARRIERSLA add column BILLING_ADDRESS_NOT_REQUIRED smallint not null default 0;
-- alter table TCARRIERSLA add column DELIVERY_ADDRESS_NOT_REQUIRED smallint not null default 0;
-- alter table TCARRIERSLA add column SUPPORTED_PGS varchar(255);

--
-- YC-448 Allow localizable images for category, product, sku, brand and shop
--

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('BRAND_IMAGE0',  'BRAND_IMAGE0',  1,  NULL,  'Brand image default',  null,  1003, 1005);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('BRAND_IMAGE0_ru',  'BRAND_IMAGE0_ru',  1,  NULL,  'Картинка ТМ по умолчанию (RU)',  null,  1003, 1005);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('BRAND_IMAGE0_en',  'BRAND_IMAGE0_en',  1,  NULL,  'Brand image default (EN)',  null,  1003, 1005);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('BRAND_IMAGE0_uk',  'BRAND_IMAGE0_uk',  1,  NULL,  'Картинка ТМ за замовчуванням  (UK)',  null,  1003, 1005);

UPDATE TBRANDATTRVALUE SET CODE = 'BRAND_IMAGE0' WHERE CODE = 'BRAND_IMAGE';
DELETE FROM TATTRIBUTE WHERE CODE = 'BRAND_IMAGE';


INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('CATEGORY_IMAGE0',  'CATEGORY_IMAGE0',  0,  NULL,  'Category image default',   null,  1003, 1002);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('CATEGORY_IMAGE0_ru',  'CATEGORY_IMAGE0_ru',  0,  NULL,  'Картинка категории по умолчанию (RU)',   null,  1003, 1002);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('CATEGORY_IMAGE0_en',  'CATEGORY_IMAGE0_en',  0,  NULL,  'Category image default (EN)',   null,  1003, 1002);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ('CATEGORY_IMAGE0_uk',  'CATEGORY_IMAGE0_uk',  0,  NULL,  'Картинка категорії за замовчуванням  (UK)',   null,  1003, 1002);

UPDATE TCATEGORYATTRVALUE SET CODE = 'CATEGORY_IMAGE0' WHERE CODE = 'CATEGORY_IMAGE';
DELETE FROM TATTRIBUTE WHERE CODE = 'CATEGORY_IMAGE';


INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE0_ru',  'IMAGE0_ru',  1,  NULL,  'Картинка товара по умолчанию (RU)',  'Картинка товара по умолчанию (RU)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE1_ru',  'IMAGE1_ru',  0,  NULL,  'Альтернативная картинка товара 1',  'Альтернативная картинка товара 1',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE2_ru',  'IMAGE2_ru',  0,  NULL,  'Альтернативная картинка товара 2',  'Альтернативная картинка товара 2',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE3_ru',  'IMAGE3_ru',  0,  NULL,  'Альтернативная картинка товара 3',  'Альтернативная картинка товара 3',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE4_ru',  'IMAGE4_ru',  0,  NULL,  'Альтернативная картинка товара 4',  'Альтернативная картинка товара 4',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE5_ru',  'IMAGE5_ru',  0,  NULL,  'Альтернативная картинка товара 5',  'Альтернативная картинка товара 5',  1003, 1003);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE0_en',  'IMAGE0_en',  1,  NULL,  'Product default image (EN)',  'Product default image (EN)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE1_en',  'IMAGE1_en',  0,  NULL,  'Product alternative image 1 (EN)',  'Product alternative image 1 (EN)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE2_en',  'IMAGE2_en',  0,  NULL,  'Product alternative image 2 (EN)',  'Product alternative image 2 (EN)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE3_en',  'IMAGE3_en',  0,  NULL,  'Product alternative image 3 (EN)',  'Product alternative image 3 (EN)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE4_en',  'IMAGE4_en',  0,  NULL,  'Product alternative image 4 (EN)',  'Product alternative image 4 (EN)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE5_en',  'IMAGE5_en',  0,  NULL,  'Product alternative image 5 (EN)',  'Product alternative image 5 (EN)',  1003, 1003);

INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE0_uk',  'IMAGE0_uk',  1,  NULL,  'Картинка товару за замовчуванням  (UK)',  'Картинка товару за замовчуванням  (UK)',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE1_uk',  'IMAGE1_uk',  0,  NULL,  'Альтернативна картинка товару 1',  'Альтернативна картинка товару 1',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE2_uk',  'IMAGE2_uk',  0,  NULL,  'Альтернативна картинка товару 2',  'Альтернативна картинка товару 2',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE3_uk',  'IMAGE3_uk',  0,  NULL,  'Альтернативна картинка товару 3',  'Альтернативна картинка товару 3',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE4_uk',  'IMAGE4_uk',  0,  NULL,  'Альтернативна картинка товару 4',  'Альтернативна картинка товару 4',  1003, 1003);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  'IMAGE5_uk',  'IMAGE5_uk',  0,  NULL,  'Альтернативна картинка товару 5',  'Альтернативна картинка товару 5',  1003, 1003);


INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ( 'SHOP_IMAGE0',  'SHOP_IMAGE0',  1,  NULL,  'Shop image default',  null,  1003, 1001);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ( 'SHOP_IMAGE0_ru',  'SHOP_IMAGE0_ru',  1,  NULL,  'Картинка магазина по умолчанию (RU)',  null,  1003, 1001);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ( 'SHOP_IMAGE0_en',  'SHOP_IMAGE0_en',  1,  NULL,  'Shop image default (EN)',  null,  1003, 1001);
INSERT INTO TATTRIBUTE (GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES ( 'SHOP_IMAGE0_uk',  'SHOP_IMAGE0_uk',  1,  NULL,  'Картинка магазину за замовчуванням  (UK)',  null,  1003, 1001);

--
-- YC-443 Add Min, Max, Step quantities to product object
--

alter table TPRODUCT add column MIN_ORDER_QUANTITY decimal(19,2);
alter table TPRODUCT add column MAX_ORDER_QUANTITY decimal(19,2);
alter table TPRODUCT add column STEP_ORDER_QUANTITY decimal(19,2);

-- alter table TPRODUCT add column MIN_ORDER_QUANTITY numeric(19,2);
-- alter table TPRODUCT add column MAX_ORDER_QUANTITY numeric(19,2);
-- alter table TPRODUCT add column STEP_ORDER_QUANTITY numeric(19,2);

INSERT INTO TATTRIBUTE (ATTRIBUTE_ID, GUID, CODE, MANDATORY, VAL, NAME, DESCRIPTION, ETYPE_ID, ATTRIBUTEGROUP_ID)
  VALUES (  10993,  'CART_ADD_ENABLE_QTY_PICKER', 'CART_ADD_ENABLE_QTY_PICKER',  0,  NULL,  'Cart: Enable quantity picker for products',  'Cart: Enable quantity picker for products',  1008, 1001);


--
-- YC-426 Add unique constraint to SEO URI
--

ALTER TABLE TSKU ADD UNIQUE (URI);
ALTER TABLE TPRODUCT ADD UNIQUE (URI);
ALTER TABLE TCATEGORY ADD UNIQUE (URI);

--
-- YC-438 Taxation
--

    create table TTAX (
        TAX_ID bigint not null auto_increment,
        VERSION bigint not null default 0,
        TAX_RATE decimal(19,2) not null,
        EXCLUSIVE_OF_PRICE bit not null default 0,
        SHOP_CODE varchar(255) not null,
        CURRENCY varchar(5) not null,
        CODE varchar(255) not null,
        DESCRIPTION varchar(100),
        CREATED_TIMESTAMP datetime,
        UPDATED_TIMESTAMP datetime,
        CREATED_BY varchar(64),
        UPDATED_BY varchar(64),
        GUID varchar(255) not null unique,
        primary key (TAX_ID)
    );

    create table TTAXCONFIG (
        TAXCONFIG_ID bigint not null auto_increment,
        VERSION bigint not null default 0,
        TAX_ID bigint not null,
        PRODUCT_CODE varchar(255),
        STATE_CODE varchar(16),
        COUNTRY_CODE varchar(2),
        CREATED_TIMESTAMP datetime,
        UPDATED_TIMESTAMP datetime,
        CREATED_BY varchar(64),
        UPDATED_BY varchar(64),
        GUID varchar(255) not null unique,
        primary key (TAXCONFIG_ID)
    );

    create index TAX_SHOP_CODE on TTAX (SHOP_CODE);
    create index TAX_CURRENCY on TTAX (CURRENCY);
    create index TAX_PRODUCT_CODE on TTAXCONFIG (PRODUCT_CODE);
    create index TAX_STATE_CODE on TTAXCONFIG (STATE_CODE);
    create index TAX_COUNTRY_CODE on TTAXCONFIG (COUNTRY_CODE);

    alter table TTAXCONFIG
        add constraint FK_TAXCFG_TAX
        foreign key (TAX_ID)
        references TTAX (TAX_ID) on delete cascade;


--     create table TTAX (
--         TAX_ID bigint not null GENERATED BY DEFAULT AS IDENTITY,
--         VERSION bigint not null default 0,
--         TAX_RATE numeric(19,2) not null,
--         EXCLUSIVE_OF_PRICE smallint not null default 0,
--         SHOP_CODE varchar(255) not null,
--         CURRENCY varchar(5) not null,
--         CODE varchar(255) not null,
--         DESCRIPTION varchar(100),
--         CREATED_TIMESTAMP timestamp,
--         UPDATED_TIMESTAMP timestamp,
--         CREATED_BY varchar(64),
--         UPDATED_BY varchar(64),
--         GUID varchar(255) not null unique,
--         primary key (TAX_ID)
--     );
--
--     create table TTAXCONFIG (
--         TAXCONFIG_ID bigint not null GENERATED BY DEFAULT AS IDENTITY,
--         VERSION bigint not null default 0,
--         TAX_ID bigint not null,
--         PRODUCT_CODE varchar(255),
--         STATE_CODE varchar(16),
--         COUNTRY_CODE varchar(2),
--         CREATED_TIMESTAMP timestamp,
--         UPDATED_TIMESTAMP timestamp,
--         CREATED_BY varchar(64),
--         UPDATED_BY varchar(64),
--         GUID varchar(255) not null unique,
--         primary key (TAXCONFIG_ID)
--     );
--
--     create index TAX_SHOP_CODE on TTAX (SHOP_CODE);
--     create index TAX_CURRENCY on TTAX (CURRENCY);
--     create index TAX_PRODUCT_CODE on TTAXCONFIG (PRODUCT_CODE);
--     create index TAX_STATE_CODE on TTAXCONFIG (STATE_CODE);
--     create index TAX_COUNTRY_CODE on TTAXCONFIG (COUNTRY_CODE);
--
--     alter table TTAXCONFIG
--         add constraint FK_TAXCFG_TAX
--         foreign key (TAX_ID)
--         references TTAX on delete cascade;

alter table TCUSTOMERORDER add column NET_PRICE decimal(19,2) not null default 0;
alter table TCUSTOMERORDER add column GROSS_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDER add column NET_PRICE numeric(19,2) not null default 0;
-- alter table TCUSTOMERORDER add column GROSS_PRICE numeric(19,2) not null default 0;

update TCUSTOMERORDER set GROSS_PRICE = PRICE;
update TCUSTOMERORDER set NET_PRICE = PRICE/1.2;

alter table TCUSTOMERORDERDELIVERY add column NET_PRICE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDELIVERY add column GROSS_PRICE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDELIVERY add column TAX_RATE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDELIVERY add column TAX_EXCLUSIVE_OF_PRICE bit not null default 0;
alter table TCUSTOMERORDERDELIVERY add column TAX_CODE varchar(255) not null default '';
-- alter table TCUSTOMERORDERDELIVERY add column NET_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDELIVERY add column GROSS_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDELIVERY add column TAX_RATE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDELIVERY add column TAX_EXCLUSIVE_OF_PRICE smallint not null default 0;
-- alter table TCUSTOMERORDERDELIVERY add column TAX_CODE varchar(255) not null default '';

update TCUSTOMERORDERDELIVERY set GROSS_PRICE = PRICE;
update TCUSTOMERORDERDELIVERY set NET_PRICE = PRICE/1.2;
update TCUSTOMERORDERDELIVERY set TAX_RATE = 20.00;
update TCUSTOMERORDERDELIVERY set TAX_CODE = 'VAT';


alter table TCUSTOMERORDERDET add column NET_PRICE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDET add column GROSS_PRICE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDET add column TAX_RATE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDET add column TAX_EXCLUSIVE_OF_PRICE bit not null default 0;
alter table TCUSTOMERORDERDET add column TAX_CODE varchar(255) not null default '';
-- alter table TCUSTOMERORDERDET add column NET_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDET add column GROSS_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDET add column TAX_RATE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDET add column TAX_EXCLUSIVE_OF_PRICE smallint not null default 0;
-- alter table TCUSTOMERORDERDET add column TAX_CODE varchar(255) not null default '';

update TCUSTOMERORDERDET set GROSS_PRICE = PRICE;
update TCUSTOMERORDERDET set NET_PRICE = PRICE/1.2;
update TCUSTOMERORDERDET set TAX_RATE = 20.00;
update TCUSTOMERORDERDET set TAX_CODE = 'VAT';


alter table TCUSTOMERORDERDELIVERYDET add column NET_PRICE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDELIVERYDET add column GROSS_PRICE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDELIVERYDET add column TAX_RATE numeric(19,2) not null default 0;
alter table TCUSTOMERORDERDELIVERYDET add column TAX_EXCLUSIVE_OF_PRICE bit not null default 0;
alter table TCUSTOMERORDERDELIVERYDET add column TAX_CODE varchar(255) not null default '';
-- alter table TCUSTOMERORDERDELIVERYDET add column NET_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDELIVERYDET add column GROSS_PRICE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDELIVERYDET add column TAX_RATE decimal(19,2) not null default 0;
-- alter table TCUSTOMERORDERDELIVERYDET add column TAX_EXCLUSIVE_OF_PRICE smallint not null default 0;
-- alter table TCUSTOMERORDERDELIVERYDET add column TAX_CODE varchar(255) not null default '';

update TCUSTOMERORDERDELIVERYDET set GROSS_PRICE = PRICE;
update TCUSTOMERORDERDELIVERYDET set NET_PRICE = PRICE/1.2;
update TCUSTOMERORDERDELIVERYDET set TAX_RATE = 20.00;
update TCUSTOMERORDERDELIVERYDET set TAX_CODE = 'VAT';
