<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:flex="http://www.springframework.org/schema/flex"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/flex http://www.springframework.org/schema/flex/spring-flex-1.5.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
">


    <!--context:component-scan base-package="com.npa"/-->


    <security:http entry-point-ref="entryPoint">
        <security:anonymous enabled="false"/>
    </security:http>

    <bean id="entryPoint"
          class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder hash="md5"/>
            <security:jdbc-user-service
                    data-source-ref="dataSourceSec"
                    group-authorities-by-username-query=""
                    users-by-username-query="SELECT m.email as username, m.password, 1 as enabled FROM TMANAGER m where m.email = ?"
                    authorities-by-username-query="SELECT mr.email as username, mr.code as authority FROM TMANAGERROLE mr  WHERE mr.email = ?"/>
        </security:authentication-provider>
    </security:authentication-manager>


    <bean id="dataSourceSec" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/yesjndi"/>
        <property name="lookupOnStartup" value="true"/>
        <property name="cache" value="true"/>
        <property name="proxyInterface" value="javax.sql.DataSource"/>
    </bean>



    <!-- #################################  aspects configurations begin ######################################-->


    <bean id="managerRegistrationAspect" class="org.yes.cart.service.domain.aspect.impl.ManagerRegistrationAspect">
        <constructor-arg index="0">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
                <property name="corePoolSize" value="5" />
                <property name="maxPoolSize" value="10" />
                <property name="queueCapacity" value="50" />
            </bean>
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.yes.cart.service.domain.impl.PassPhraseGeneratorImpl">
                <constructor-arg index="0" value="8"/>
            </bean>
        </constructor-arg>
        <constructor-arg index="2">
            <bean class="org.yes.cart.service.domain.impl.MD5HashHelperImpl"/>
        </constructor-arg>
        <constructor-arg index="3" ref="mailSender"/>
        <constructor-arg index="4" ref="mailComposer"/>
    </bean>


    <!-- #################################  aspects configurations end ######################################-->


    <!-- #################################  message consumers begin ######################################-->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="localhost"/>
        <property name="port" value="25"/>
        <property name="username" value="yourusername"/>
        <property name="password" value="yourpassword"/>
        <property name="javaMailProperties">
            <props>
                <!-- Use SMTP-AUTH to authenticate to SMTP server -->
                <!--<prop key="mail.smtp.auth">true</prop>-->
                <!-- Use TLS to encrypt communication with SMTP server -->
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>





    <!-- #################################  message consumers end ######################################-->

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          autowire="byName">
        <property name="configLocation" value="classpath:hibernate-nc.cfg.xml"/>
        <property name="mappingResources">
            <list>
                <value>npa.xml</value>
            </list>
        </property>
        <property name="entityInterceptor">
            <bean class="org.yes.cart.domain.interceptor.AuditInterceptor"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.search.default.indexBase">
                    #{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart-manager'}
                </prop>
                <prop key="hibernate.search.default.exclusive_index_use">false</prop>

            </props>
        </property>
    </bean>

    <bean id="productReindexer" class="org.yes.cart.domain.entityindexer.impl.EmptyProductIndexerImpl"/>

    <import resource="classpath*:core-config.xml"/>

    <import resource="classpath*:payment-api.xml"/>


</beans>
