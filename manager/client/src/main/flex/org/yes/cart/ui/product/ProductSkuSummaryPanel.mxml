<?xml version="1.0" ?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:controls="controls.*" xmlns:yci18n="org.yes.cart.ui.i18n.*" width="100%" height="100%"
           creationComplete="onInitPanel()">

    <mx:Form x="0" y="0">
        <mx:FormItem label="@Resource(bundle='ProductSkuManagementPanel',key='code')">
            <mx:TextInput id="codeTextInput" width="300" enabled="{false}"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='ProductSkuManagementPanel',key='name')">
            <mx:TextInput id="nameTextInput" width="300" />
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='ProductSkuManagementPanel',key='displayName')">
            <yci18n:i18nStringField id="displayNames"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='ProductSkuManagementPanel',key='barCode')">
            <mx:TextInput id="barCodeTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='ProductSkuManagementPanel',key='rank')">
            <mx:TextInput id="rankTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='ProductSkuManagementPanel',key='description')">
            <mx:TextArea id="descriptionTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem width="100%"
                     label="@Resource(bundle='ProductManagementPanel',key='uri')">
            <mx:TextInput id="uriNameTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem width="100%"
                     label="@Resource(bundle='ProductManagementPanel',key='title')">
            <mx:TextInput id="titleNameTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem width="100%"
                     label="@Resource(bundle='ProductManagementPanel',key='metakeywords')">
            <mx:TextInput id="metakeywordsNameTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem width="100%"
                     label="@Resource(bundle='ProductManagementPanel',key='metadescription')">
            <mx:TextInput id="metadescriptionNameTextInput" width="300"/>
        </mx:FormItem>
        <mx:FormItem>
            <mx:Button
                enabled="{productSkuChangedFlag}"
                label="@Resource(bundle='ProductSkuManagementPanel',key='save')"
                toolTip="@Resource(bundle='ProductSkuManagementPanel',key='saveHint')"
                click="saveProductsKU(event)"/>
        </mx:FormItem>
    </mx:Form>


    <mx:NumberValidator id="rankValidator"
        source="{rankTextInput}" property="text"
        minValue="0" maxValue="99999" domain="int"
        invalidCharError="@Resource(bundle='ProductSkuManagementPanel',key='rankInvalidCharError')"
        integerError="@Resource(bundle='ProductSkuManagementPanel',key='rankInvalidCharError')"
            />

    <mx:StringValidator  id="skuNameValidator"
        source="{nameTextInput}" property="text"
        minLength="1"
        required="true"
        />

    <mx:NumberValidator id="barCodeValidator"
                        source="{barCodeTextInput}" property="text"
                        required="false"
                        domain="int"/>


    <mx:Boolean id="productSkuChangedFlag">false</mx:Boolean>

    <mx:ArrayCollection id="propertyWatchers"/>

    <mx:Script>
        <![CDATA[
        import com.hexagonstar.util.debug.Debug;

        import org.yes.cart.event.DtoEvent;

        import org.yes.cart.impl.ProductSkuDTOImpl;

        import mx.binding.utils.BindingUtils;
        import mx.binding.utils.ChangeWatcher;
        import mx.events.PropertyChangeEvent;
        import mx.validators.Validator;

        [Bindable]
        private var _productSku:ProductSkuDTOImpl;

        public function get productSku():ProductSkuDTOImpl {
            return _productSku;
        }

        public function set productSku(value:ProductSkuDTOImpl):void {
            if (_productSku != null && value != null && _productSku.skuId == value.skuId) {
                return;
            }
            unbindProperties();
            _productSku = value;
            bindProperties();
        }

        private var validatorArr:Array;

        private function onInitPanel():void {
            validatorArr = [ rankValidator, skuNameValidator, barCodeValidator ];
        }

        private function unbindProperties():void {
            for each (var watcher:ChangeWatcher in propertyWatchers) {
                watcher.unwatch();
            }
            propertyWatchers.removeAll();
            displayNames.setSourceObject(null, null);
        }

        private function bindProperties():void {

            if (_productSku != null) {
                Debug.trace("INFO ProductSkuSummaryPanel rebind begin");

                displayNames.setSourceObject(_productSku, 'displayNames');

                propertyWatchers.addItem(BindingUtils.bindProperty(codeTextInput, "text", _productSku, "code"));
                propertyWatchers.addItem(BindingUtils.bindProperty(uriNameTextInput, "text", _productSku, "uri"));
                propertyWatchers.addItem(BindingUtils.bindProperty(titleNameTextInput, "text", _productSku, "title"));
                propertyWatchers.addItem(BindingUtils.bindProperty(metakeywordsNameTextInput, "text", _productSku, "metakeywords"));
                propertyWatchers.addItem(BindingUtils.bindProperty(metadescriptionNameTextInput, "text", _productSku, "metadescription"));

                propertyWatchers.addItem(BindingUtils.bindProperty(nameTextInput, "text", _productSku, "name"));

                propertyWatchers.addItem(BindingUtils.bindProperty(barCodeTextInput, "text", _productSku, "barCode"));
                propertyWatchers.addItem(BindingUtils.bindProperty(rankTextInput, "text", _productSku, "rank"));
                propertyWatchers.addItem(BindingUtils.bindProperty(descriptionTextInput, "text", _productSku, "description"));

                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "code", codeTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "uri", uriNameTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "title", titleNameTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "metakeywords", metakeywordsNameTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "metadescription", metadescriptionNameTextInput, "text"));

                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "name", nameTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "barCode", barCodeTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "rank", rankTextInput, "text"));
                propertyWatchers.addItem(BindingUtils.bindProperty(_productSku, "description", descriptionTextInput, "text"));

                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "code", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "uri", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "title", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "metakeywords", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "metadescription", productSkuChanged));

                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "name", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "barCode", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "rank", productSkuChanged));
                propertyWatchers.addItem(ChangeWatcher.watch(_productSku, "description", productSkuChanged));

                Debug.trace("INFO ProductSkuSummaryPanel rebind end");

            }

        }

        private function productSkuChanged(event:PropertyChangeEvent):void {
            var validatorErrorArray:Array = Validator.validateAll(validatorArr);
            productSkuChangedFlag = (validatorErrorArray.length == 0);
        }

        private function saveProductsKU(event:MouseEvent):void {
            dispatchEvent(new DtoEvent(DtoEvent.UPDATE, _productSku));
            productSkuChangedFlag = false;
        }
        ]]>
</mx:Script>
</mx:Canvas>
