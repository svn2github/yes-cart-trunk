<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         width="100%" height="100%"
         creationComplete="init();"
         paddingLeft="2" paddingTop="2" paddingRight="2" paddingBottom="2">
    <mx:Script>
<![CDATA[
        import com.hexagonstar.util.debug.Debug;

        import mx.core.FlexGlobals;
        import mx.managers.PopUpManager;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.impl.ShopDTOImpl;
        import org.yes.cart.impl.CarrierDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;
        import org.yes.cart.ui.carrier.CarrierCreateEditDialog;

        private var _shopDTOImpl:ShopDTOImpl;

        public function set shopDTOImpl(value:ShopDTOImpl):void {
            _shopDTOImpl = value;
        }

        private function init():void {
            remoteCarrierService.getAll();
        }

        private function onAssignCarrierClick(event:Event):void {

            if (this.addAvailableEnabled && this.availableCarriersList.selectedItem != null) {
                remoteCarrierService.assignToShop(
                        this.availableCarriersList.selectedItem.carrierId, _shopDTOImpl.shopId);
            }


        }

        private function onUnassignCarrierClick(event:Event):void {

            if (this.addAssignedEnabled && this.assignedCarriersList.selectedItem != null) {
                remoteCarrierService.unassignFromShop(
                        this.assignedCarriersList.selectedItem.carrierId, _shopDTOImpl.shopId);
            }
        }

        private function onAvailableCarrierSelected(event:Event):void {
            addAvailableEnabled = this.availableCarriersList.selectedItem != null;
        }

        private function onAssignedCarrierSelected(event:Event):void {
            addAssignedEnabled = this.assignedCarriersList.selectedItem != null;
        }


        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }


        /**
         * Is given carrier assigned to shop ?
         * @param carrier carrier
         * @return true if assigned
         */
        private function isAssigned(carrier:CarrierDTOImpl):Boolean {
            for each (var shopCarrier:Object in assignedCarriers) {
                if (shopCarrier.carrierId == carrier.carrierId) {
                    return true;
                }
            }
            return false;
        }

        private function onFindByShopIdResult(event:ResultEvent):void {

            assignedCarriers = event.result as ArrayCollection;
            availableCarriers.removeAll();
            for each (var carrier:CarrierDTOImpl in allCarriers) {
                if (!isAssigned(carrier)) {
                    availableCarriers.addItem(carrier);
                }
            }

            addAvailableEnabled = false;
            addAssignedEnabled = false;

        }

        private function onGetAllResult(event:ResultEvent):void {

            this.allCarriers = event.result as ArrayCollection;
            remoteCarrierService.findAllByShopId(_shopDTOImpl.shopId);

        }

        private function onUnassignCarrierResult(event:ResultEvent):void {
            remoteCarrierService.getAll();
        }

        private function onAssignCarrierResult(event:ResultEvent):void {
            remoteCarrierService.getAll();
        }

        private var newPopUp:CarrierCreateEditDialog;

        private function onNewCarrierClick(event:MouseEvent):void {
            Debug.trace("carrier panel onNewCarrierClick");
            newPopUp = CarrierCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), CarrierCreateEditDialog, true));
            newPopUp.saveBtn.addEventListener(MouseEvent.CLICK, createNewCarrier);
            newPopUp.carrierDTOImpl = new CarrierDTOImpl();
            PopUpManager.centerPopUp(newPopUp);
        }

        private function createNewCarrier(event:Event):void {
            remoteCarrierService.createForShop(newPopUp.carrierDTOImpl, _shopDTOImpl.shopId);
        }

        private function onCreateResult(event:ResultEvent):void {
            if (newPopUp != null) {
                newPopUp.saveBtn.removeEventListener(MouseEvent.CLICK, onNewCarrierClick);
                PopUpManager.removePopUp(newPopUp);
            }
            newPopUp = null;
            remoteCarrierService.getAll();
        }
        ]]>
    </mx:Script>

    <mx:RemoteObject showBusyCursor="true" id="remoteCarrierService"
                     destination="remoteCarrierService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getAll" name="getAll"
                   result="onGetAllResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="findAllByShopId" name="findAllByShopId"
                   result="onFindByShopIdResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="unassignFromShop" name="unassignFromShop"
                   result="onUnassignCarrierResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="assignToShop" name="assignToShop"
                   result="onAssignCarrierResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="createForShop" name="createForShop"
                   result="onCreateResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:ArrayCollection id="availableCarriers"/>
    <mx:ArrayCollection id="assignedCarriers"/>
    <mx:ArrayCollection id="allCarriers"/>

    <mx:Boolean id="addAvailableEnabled">false</mx:Boolean>
    <mx:Boolean id="addAssignedEnabled">false</mx:Boolean>

    <mx:HBox  width="100%">
        <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='newCarrier')"
                   toolTip="@Resource(bundle='CarrierManagementPanel',key='newCarrierHint')"
                   click="onNewCarrierClick(event)"/>
    </mx:HBox>
    <mx:HBox width="100%" height="100%">
        <mx:Grid width="100%" height="100%" id="supportedCurrencyPanel">
            <mx:GridRow width="100%" height="50">
                <mx:GridItem width="45%" height="50" textAlign="center" verticalAlign="middle">
                    <mx:Label text="@Resource(bundle='StoresManagementPanel',key='availableCarriers')"/>
                </mx:GridItem>
                <mx:GridItem width="10%" height="50">
                </mx:GridItem>
                <mx:GridItem width="45%" height="50" textAlign="center" verticalAlign="middle">
                    <mx:Label text="@Resource(bundle='StoresManagementPanel',key='supportedCarriers')"/>
                </mx:GridItem>
            </mx:GridRow>
            <mx:GridRow width="100%" height="100%">
                <mx:GridItem width="45%" height="100%">
                    <mx:List
                            id="availableCarriersList"
                            width="100%"
                            height="100%"
                            dataProvider="{availableCarriers}"
                            labelField="name"
                            doubleClickEnabled="true"
                            doubleClick="onAssignCarrierClick(event)"
                            itemClick="onAvailableCarrierSelected(event)"
                            >
                    </mx:List>
                </mx:GridItem>
                <mx:GridItem width="10%" height="100%" verticalAlign="middle" textAlign="center">
                    <mx:VBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
                        <mx:Button enabled="{addAvailableEnabled}"
                                   label="@Resource(bundle='StoresManagementPanel',key='assign')"
                                   toolTip="@Resource(bundle='StoresManagementPanel',key='assignHint')"
                                   click="onAssignCarrierClick(event)"/>
                        <mx:Button enabled="{addAssignedEnabled}"
                                   label="@Resource(bundle='StoresManagementPanel',key='unassign')"
                                   toolTip="@Resource(bundle='StoresManagementPanel',key='unassignHint')"
                                   click="onUnassignCarrierClick(event)"/>
                    </mx:VBox>
                </mx:GridItem>
                <mx:GridItem width="45%" height="100%">
                    <mx:List
                            id="assignedCarriersList"
                            width="100%"
                            height="100%"
                            dataProvider="{assignedCarriers}"
                            labelField="name"
                            doubleClickEnabled="true"
                            itemDoubleClick="onUnassignCarrierClick(event)"
                            itemClick="onAssignedCarrierSelected(event)"
                            >

                    </mx:List>
                </mx:GridItem>
            </mx:GridRow>

        </mx:Grid>
    </mx:HBox>
</mx:VBox>
