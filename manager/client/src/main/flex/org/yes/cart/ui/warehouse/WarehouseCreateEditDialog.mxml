<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				title="@Resource(bundle='WarehouseManagementPanel',key='editWarehouseDialog')"
                showCloseButton="true" close="PopUpManager.removePopUp(this)"
                creationComplete="init()">

    <mx:Boolean id="newWarehouseFlag">false</mx:Boolean>

    <mx:RemoteObject showBusyCursor="true"  id="remoteCountryService"
                     destination="remoteCountryService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getAllCountries" name="getAll"
                   result="onGetAllCountriesResult(event)"
                   fault="onRpcMethodFault(event)"/>


    </mx:RemoteObject>

    <mx:RemoteObject showBusyCursor="true"  id="remoteStateService"
                     destination="remoteStateService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="findByCountry" name="findByCountry"
                   result="onFindByCountryResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>



    <mx:Form>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='code')">
            <mx:TextInput   width="160" id="code" enabled="{newWarehouseFlag}"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='name')">
            <mx:TextInput   width="160" id="wName"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='description')">
            <mx:TextArea   width="160" id="description"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='country')">
            <mx:ComboBox id="countryComboBox"
                         change="countryChangeEvt(event)"
                         width="160"
                         labelField="name"
                         prompt="@Resource(bundle='WarehouseManagementPanel',key='selectCountry')"
                    />
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='state')">
            <mx:ComboBox id="stateComboBox"
                         change="stateChangeEvt(event)"
                         width="160"
                         labelField="name"
                         prompt="@Resource(bundle='WarehouseManagementPanel',key='selectState')"

                    />
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='city')">
            <mx:TextArea   width="160" id="city"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagementPanel',key='postcode')">
            <mx:TextArea   width="160" id="postcode"/>
        </mx:FormItem>

    </mx:Form>
    <mx:ControlBar horizontalAlign="right">
        <mx:Button  id="saveBtn" label="@Resource(bundle='ShopManagerApplication',key='save')"
                   width="94"/>
        <mx:Button id="closeBtn" label="@Resource(bundle='ShopManagerApplication',key='close')"
                   click="PopUpManager.removePopUp(this)" width="94"/>
    </mx:ControlBar>


    <mx:Script>
       <![CDATA[
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.impl.CountryDTOImpl;
        import org.yes.cart.impl.StateDTOImpl;

        import org.yes.cart.impl.WarehouseDTOImpl;

        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import mx.binding.utils.BindingUtils;
        import mx.managers.PopUpManager;
        import mx.rpc.AsyncResponder;

        import org.yes.cart.util.DomainUtils;

        [Bindable]
        private var _warehouseDTOImpl:WarehouseDTOImpl;

        public function get warehouseDTOImpl():WarehouseDTOImpl {
            return _warehouseDTOImpl;
        }

        public function set warehouseDTOImpl(value:WarehouseDTOImpl):void {
            _warehouseDTOImpl = value;
        }

        private function countryChangeEvt(event:Event):void {
            _warehouseDTOImpl.countryCode = event.currentTarget.selectedItem.countryCode;
            _warehouseDTOImpl.stateCode = null;
            stateComboBox.selectedIndex = -1;
            remoteStateService.findByCountry(_warehouseDTOImpl.countryCode);
        }

        private function stateChangeEvt(event:Event):void {
            _warehouseDTOImpl.stateCode = event.currentTarget.selectedItem.stateCode;
        }


        private function init():void {
            if (newWarehouseFlag) {
                this.title = resourceManager.getString('WarehouseManagementPanel', 'newWarehouseDialog');
                saveBtn.label = resourceManager.getString('WarehouseManagementPanel', 'create');
            } else {
                this.title = resourceManager.getString('WarehouseManagementPanel', 'editWarehouse');
                saveBtn.label = resourceManager.getString('WarehouseManagementPanel', 'update');
            }

            BindingUtils.bindProperty(code, "text", _warehouseDTOImpl, "code");
            BindingUtils.bindProperty(wName, "text", _warehouseDTOImpl, "name");
            BindingUtils.bindProperty(description, "text", _warehouseDTOImpl, "description");
            BindingUtils.bindProperty(city, "text", _warehouseDTOImpl, "city");
            BindingUtils.bindProperty(postcode, "text", _warehouseDTOImpl, "postcode");


            stateComboBox.selectedIndex = -1;
            countryComboBox.selectedIndex = -1;

            BindingUtils.bindProperty(_warehouseDTOImpl, "code", code, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "name", wName, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "description", description, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "city", city, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "postcode", postcode, "text");


        }

        /**
         * Create or edit warehouse.
         * @param warehouse
         * @return
         */
        public function createEditWarehouse(warehouse:WarehouseDTOImpl):void {
            this.warehouseDTOImpl = warehouse;
            this.newWarehouseFlag = DomainUtils.isNewPK(warehouse.warehouseId);
            remoteCountryService.getAll();
        }

        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onGetAllCountriesResult(event:ResultEvent):void {

            var oldValue:Object = this.warehouseDTOImpl.countryCode;
            this.countryComboBox.dataProvider = event.result;
            if (oldValue != null) {
                for each (var country:CountryDTOImpl in this.countryComboBox.dataProvider) {
                    if (country.countryCode == this.warehouseDTOImpl.countryCode) {
                        this.countryComboBox.selectedItem = country;
                        remoteStateService.findByCountry(this.warehouseDTOImpl.countryCode);
                        break;
                    }
                }
            }

        }

        private function onFindByCountryResult(event:ResultEvent):void {
            var oldValue:Object = this.warehouseDTOImpl.stateCode;
            this.stateComboBox.dataProvider = event.result;
            if (oldValue != null) {
                for each (var state:StateDTOImpl in this.stateComboBox.dataProvider) {
                    if (state.stateCode == this.warehouseDTOImpl.stateCode) {
                        this.stateComboBox.selectedItem = state;
                        break;
                    }
                }
            }

        }
        ]]>

        </mx:Script>
</mx:TitleWindow>
