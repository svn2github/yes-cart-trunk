<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				title="Create warehouse"  showCloseButton="true" close="PopUpManager.removePopUp(this)" >

    <mx:Boolean id="newWarehouseFlag">false</mx:Boolean>

    <mx:RemoteObject showBusyCursor="true"  id="remoteCountryService"
                     destination="remoteCountryService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>

    <mx:RemoteObject showBusyCursor="true"  id="remoteStateService"
                     destination="remoteStateService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>



    <mx:Form>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='code')">
            <mx:TextInput   width="160" id="code" enabled="{newWarehouseFlag}"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='name')">
            <mx:TextInput   width="160" id="wName"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='description')">
            <mx:TextArea   width="160" id="description"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='country')">
            <mx:ComboBox id="countryComboBox"
                         change="countryChangeEvt(event)"
                         width="160"
                         labelField="name" data="countryCode" dataProvider="{remoteCountryService.getAll.lastResult}"
                         prompt="@Resource(bundle='WarehouseManagmentPanel',key='selectCountry')"
                    />
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='state')">
            <mx:ComboBox id="stateComboBox"
                         change="stateChangeEvt(event)"
                         width="160"
                         labelField="name" data="stateCode"  dataProvider="{remoteStateService.findByCountry.lastResult}"
                         prompt="@Resource(bundle='WarehouseManagmentPanel',key='selectState')"

                    />
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='city')">
            <mx:TextArea   width="160" id="city"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='WarehouseManagmentPanel',key='postcode')">
            <mx:TextArea   width="160" id="postcode"/>
        </mx:FormItem>

    </mx:Form>
    <mx:ControlBar horizontalAlign="right">
        <mx:Button  id="saveBtn" label="Save"
                   width="94"/>
        <mx:Button id="closeBtn" label="@Resource(bundle='WarehouseManagmentPanel',key='close')"
                   click="PopUpManager.removePopUp(this)" width="94"/>
    </mx:ControlBar>


    <mx:Script>
       <![CDATA[
        import org.yes.cart.impl.WarehouseDTOImpl;

        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import mx.binding.utils.BindingUtils;
        import mx.managers.PopUpManager;
        import mx.rpc.AsyncResponder;

        [Bindable]
        private var _warehouseDTOImpl:WarehouseDTOImpl;

        public function get warehouseDTOImpl():WarehouseDTOImpl {
            return _warehouseDTOImpl;
        }

        public function set warehouseDTOImpl(value:WarehouseDTOImpl):void {
            _warehouseDTOImpl = value;
        }

        private function countryChangeEvt(event:Event):void {
            _warehouseDTOImpl.countryCode = event.currentTarget.selectedItem.countryCode;
            _warehouseDTOImpl.stateCode = null;
            stateComboBox.selectedIndex = -1;
            remoteStateService.findByCountry(_warehouseDTOImpl.countryCode);
        }

        private function stateChangeEvt(event:Event):void {
            _warehouseDTOImpl.stateCode = event.currentTarget.selectedItem.stateCode;
        }


        private function init():void {
            if (newWarehouseFlag) {
                this.title = resourceManager.getString('WarehouseManagmentPanel', 'newWarehouseDialog');
                saveBtn.label = resourceManager.getString('WarehouseManagmentPanel', 'create');
            } else {
                this.title = resourceManager.getString('WarehouseManagmentPanel', 'editWarehouse');
                saveBtn.label = resourceManager.getString('WarehouseManagmentPanel', 'update');
            }

            BindingUtils.bindProperty(code, "text", _warehouseDTOImpl, "code");
            BindingUtils.bindProperty(wName, "text", _warehouseDTOImpl, "name");
            BindingUtils.bindProperty(description, "text", _warehouseDTOImpl, "description");
            BindingUtils.bindProperty(city, "text", _warehouseDTOImpl, "city");
            BindingUtils.bindProperty(postcode, "text", _warehouseDTOImpl, "postcode");


            stateComboBox.selectedIndex = -1;
            countryComboBox.selectedIndex = -1;
            for each (var state:Object in stateComboBox.dataProvider) {
                if (state.stateCode == _warehouseDTOImpl.stateCode) {
                    stateComboBox.selectedItem = state;
                    break;
                }
            }


            for each (var country:Object in countryComboBox.dataProvider) {
                if (country.countryCode == _warehouseDTOImpl.countryCode) {
                    countryComboBox.selectedItem = country;
                    break;
                }
            }


            BindingUtils.bindProperty(_warehouseDTOImpl, "code", code, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "name", wName, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "description", description, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "city", city, "text");
            BindingUtils.bindProperty(_warehouseDTOImpl, "postcode", postcode, "text");


        }

        public function statesLoaded(result:Object, token:Object = null):void {
            init();
        }

        /**
         * Load state/area in case of warehouse edit
         * @param countryCode to load country states.
         * @return nothing
         */
        private function loadStates(result:Object, countryCode:String):void {
            remoteStateService.findByCountry(countryCode).addResponder(
                    new AsyncResponder(statesLoaded, null));
        }


        /**
         * Create or edit warehouse.
         * @param warehouse
         * @return
         */
        public function createEditWarehouse(warehouse:WarehouseDTOImpl, newFlag:Boolean):void {
            this.warehouseDTOImpl = warehouse;
            this.newWarehouseFlag = newFlag;
            remoteCountryService.getAll().addResponder(
                    new AsyncResponder(loadStates, null, this.warehouseDTOImpl.countryCode));
        }
        ]]>

        </mx:Script>
</mx:TitleWindow>
