<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:VDividedBox xmlns:mx="http://www.adobe.com/2006/mxml"
                xmlns:promo="org.yes.cart.ui.promotion.*"
                xmlns:georg="com.georg.*"
                width="100%"
                height="100%"
                creationComplete="initPanel()"
                paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">
    <mx:Script>

        <![CDATA[
        import com.hexagonstar.util.debug.Debug;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.IndexChangedEvent;
        import mx.events.ListEvent;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.impl.PromotionDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;
        import org.yes.cart.util.CloneUtil;

        private var TAB_SUMMARY_IDX:int = 0;
        private var TAB_CONDITION_IDX:int = 1;
        private var TAB_TAGS_IDX:int = 2;


        [Bindable]
        private var promotionDTOImpl:PromotionDTOImpl;

        public function initPanel():void {
            typeFilterValue.dataProvider = [
                { data:null, label:'' },
                { data:'O', label:resourceManager.getString('PromotionManagementPanel', 'promoTypeO') },
                { data:'S', label:resourceManager.getString('PromotionManagementPanel', 'promoTypeS') },
                { data:'I', label:resourceManager.getString('PromotionManagementPanel', 'promoTypeI') },
                { data:'C', label:resourceManager.getString('PromotionManagementPanel', 'promoTypeC') }
            ];
            actionFilterValue.dataProvider = [
                { data:null, label:'' },
                { data:'F', label:resourceManager.getString('PromotionManagementPanel', 'promoActionF') },
                { data:'P', label:resourceManager.getString('PromotionManagementPanel', 'promoActionP') },
                { data:'G', label:resourceManager.getString('PromotionManagementPanel', 'promoActionG') },
                { data:'T', label:resourceManager.getString('PromotionManagementPanel', 'promoActionT') }
            ];
            enabledFilterValue.dataProvider = [
                { data:null, label:'' },
                { data:true, label:'+' },
                { data:true, label:'-' }
            ];
        }

        private function onPromotionSelected(event:ListEvent):void {
            promotionSelected = this.promotionGrid.selectedItem != null;
            if (promotionSelected) {
                promotionDTOImpl = PromotionDTOImpl(CloneUtil.clone(event.currentTarget.selectedItem));
                initTabs(promotionTabNavigator.selectedIndex);
            }
        }

        private function initTabs(tabIdx:int):void {
            if (promotionSelected) {
                Debug.trace("INFO promtoionTabNavigator.selectedIndex is :" + tabIdx);
                switch (tabIdx) {


                    case TAB_SUMMARY_IDX:
                    {
                        summaryTabSelected();
                        break;
                    }

                    case TAB_CONDITION_IDX:
                    {
                        conditionTabSelected();
                        break;
                    }

                    case TAB_TAGS_IDX:
                    {
                        tagsTabSelected();
                        break;
                    }


                }
            }

        }

        private function onPromotionUpdate(promo:PromotionDTOImpl):void {
            promotionDTOImpl = promo;
            promotionSelected = promotionDTOImpl != null;
            if (promotionSelected) {
                initTabs(promotionTabNavigator.selectedIndex);
            }
        }

        private function summaryTabSelected():void {
            this.promotionSummary.promotion = promotionDTOImpl;
            Debug.trace("INFO Summary tab selected for promotion id" + promotionDTOImpl.promotionId);
        }

        private function conditionTabSelected():void {
            Debug.trace("INFO Condition tab selected for promotion id" + promotionDTOImpl.promotionId);
            promotionRule.promotion = promotionDTOImpl;
        }

        private function tagsTabSelected():void {
            Debug.trace("INFO Promotion tags tab selected for promotion id" + promotionDTOImpl.promotionId);
            promotionTags.promotion = promotionDTOImpl;
        }

        private function onApplyFilterClick(event:MouseEvent):void {

            remotePromotionService.findByParameters(
                    codeFilterValue.text,
                    shopCodeFilterValue.text,
                    currencyFilterValue.text,
                    tagFilterValue.text,
                    typeFilterValue.selectedItem != null ? typeFilterValue.selectedItem.data : null,
                    actionFilterValue.selectedItem != null ? actionFilterValue.selectedItem.data : null,
                    enabledFilterValue.selectedItem != null ? enabledFilterValue.selectedItem.data : null);
        }

        private function onRemovePromotionResult(event:ResultEvent):void {
            onApplyFilterClick(null);
        }

        private function onTabClick(event:IndexChangedEvent):void {
            initTabs(event.newIndex);
        }

        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onFindPromotionResult(event:ResultEvent):void {
            this.promotionSelected = false;
            this.promotionGrid.dataProvider = event.result;
        }

        private function onApplyFilterShowClick(event:MouseEvent):void {
            filterPanel.visible = !filterPanel.visible;
            filterPanel.includeInLayout = filterPanel.visible;
            if (filterPanel.visible) {
                (event.target as Button).label = resourceManager.getString('Common', 'findBtnToggleOff');
            } else {
                (event.target as Button).label = resourceManager.getString('Common', 'findBtnToggleOn');
            }
        }

        private function onRemoveBtnClick(event:MouseEvent):void {
            if (promotionSelected && promotionDTOImpl != null) {
                Alert.show(
                        resourceManager.getString('PromotionManagementPanel', 'deletePromotionConfirm', [ this.promotionDTOImpl.name ]),
                        resourceManager.getString('ShopManagerApplication', 'warning'),
                        Alert.OK | Alert.CANCEL, this, onDeleteSelectedPromotionConfirm, null, Alert.OK);
            }
        }

        private function onDeleteSelectedPromotionConfirm(event:CloseEvent):void {
            if (event.detail == Alert.OK) {
                if (promotionSelected && promotionDTOImpl != null) {
                    remotePromotionService.remove(promotionDTOImpl.promotionId);
                }
            }
        }

        private function onCreateBtnClick(event:MouseEvent):void {
            promotionDTOImpl = new PromotionDTOImpl();
            promotionDTOImpl.canBeCombined = false;
            promotionDTOImpl.code = resourceManager.getString('PromotionManagementPanel', 'newPromo');
            promotionSelected = true;

            initTabs(promotionTabNavigator.selectedIndex);
        }


        ]]>

    </mx:Script>

    <mx:Boolean id="promotionSelected">false</mx:Boolean>

    <mx:RemoteObject showBusyCursor="true" id="remotePromotionService" destination="remotePromotionService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="findByParameters" name="findByParameters"
                   result="onFindPromotionResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="remove" name="remove"
                   result="onRemovePromotionResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:Panel width="100%" height="100%" title="@Resource(bundle='PromotionManagementPanel',key='promotions')"
              paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">
        <mx:VBox width="100%">

            <mx:HBox paddingTop="5" width="100%">

                <mx:VBox paddingTop="5">

                    <mx:Grid >
                        <mx:GridRow>
                            <mx:GridItem>
                                <mx:Button label="@Resource(bundle='PromotionManagementPanel',key='createPromotion')"
                                           click="onCreateBtnClick(event)"/>
                                <mx:Button label="@Resource(bundle='PromotionManagementPanel',key='deletePromotion')"
                                           click="onRemoveBtnClick(event)"
                                           enabled="{promotionSelected}"
                                        />
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='code')"/>

                                <mx:TextInput id="codeFilterValue" width="100"
                                              toolTip="@Resource(bundle='PromotionManagementPanel',key='code')"/>
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Button label="@Resource(bundle='Common',key='findBtnToggleOn')"
                                           click="onApplyFilterShowClick(event)"
                                        />
                            </mx:GridItem>
                        </mx:GridRow>
                    </mx:Grid>

                    <mx:Grid id="filterPanel" visible="false" includeInLayout="false" >
                        <mx:GridRow>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='shopCode')"/>
                                <mx:TextInput id="shopCodeFilterValue" width="100"/>
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='currency')"/>
                                <mx:TextInput id="currencyFilterValue" width="100"/>
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='tags')"/>
                                <mx:TextInput id="tagFilterValue" width="100"/>
                            </mx:GridItem>
                        </mx:GridRow>
                        <mx:GridRow>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='promoType')"/>
                                <mx:ComboBox id="typeFilterValue" width="120"
                                             prompt="@Resource(bundle='PromotionManagementPanel',key='selectPromoType')"
                                        />
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='promoAction')"/>
                                <mx:ComboBox id="actionFilterValue" width="145"
                                             prompt="@Resource(bundle='PromotionManagementPanel',key='selectPromoAction')"
                                        />
                            </mx:GridItem>
                        </mx:GridRow>
                        <mx:GridRow>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='enabled')"/>
                                <mx:ComboBox id="enabledFilterValue" width="50"/>
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='enabledFrom')"/>
                                <georg:DateTimeField id="enabledFromFilterValue" width="130"/>
                            </mx:GridItem>
                            <mx:GridItem>
                                <mx:Label text="@Resource(bundle='PromotionManagementPanel',key='enabledTo')"/>
                                <georg:DateTimeField id="enabledToFilterValue" width="130"/>
                            </mx:GridItem>
                        </mx:GridRow>
                    </mx:Grid>
                </mx:VBox>

                <mx:Button height="100%" label="@Resource(bundle='PromotionManagementPanel',key='applyFilter')"
                           toolTip="@Resource(bundle='PromotionManagementPanel',key='applyFilterToolTip')"
                           click="onApplyFilterClick(event)"
                        />


            </mx:HBox>

            <mx:DataGrid id="promotionGrid" width="100%" height="100%"
                         itemClick="onPromotionSelected(event)">
                <mx:columns>
                    <mx:DataGridColumn width="80" headerText="@Resource(bundle='PromotionManagementPanel',key='id')"
                                       dataField="promotionId"/>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='code')"
                                       dataField="code"/>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='name')"
                                       dataField="name"/>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='shopCode')"
                                       dataField="shopCode"/>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='currency')"
                                       dataField="currency"/>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='promoType')">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{resourceManager.getString('PromotionManagementPanel', 'promoType' + data.promoType)}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='promoAction')">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{resourceManager.getString('PromotionManagementPanel', 'promoAction' + data.promoAction)}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn headerText="@Resource(bundle='PromotionManagementPanel',key='tags')"
                                       dataField="tag"/>
                </mx:columns>
            </mx:DataGrid>

        </mx:VBox>
        <mx:TabNavigator id="promotionTabNavigator" change="onTabClick(event);" width="100%" height="100%"
                         visible="{promotionSelected}">

            <promo:PromotionSummaryPanel id="promotionSummary" updateCallback="onPromotionUpdate"/>
            <promo:PromotionRulePanel id="promotionRule" updateCallback="onPromotionUpdate"/>
            <promo:PromotionTagsPanel id="promotionTags" updateCallback="onPromotionUpdate"/>

        </mx:TabNavigator>

    </mx:Panel>

</mx:VDividedBox>