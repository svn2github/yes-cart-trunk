<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         width="100%" height="100%"
         creationComplete="init();"
         paddingLeft="2" paddingTop="2" paddingRight="2" paddingBottom="2">
    <mx:Script>
<![CDATA[
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.impl.ShopDTOImpl;
        import org.yes.cart.impl.WarehouseDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;

        private var _shopDTOImpl:ShopDTOImpl;

        public function set shopDTOImpl(value:ShopDTOImpl):void {
            _shopDTOImpl = value;
        }

        private function init():void {
            remoteWarehouseService.getAll();
        }

        private function assignWarehouseHandler(event:Event):void {

            if (this.addAvailableEnabled && this.availableWarehousesList.selectedItem != null) {
                remoteWarehouseService.assignWarehouse(
                        this.availableWarehousesList.selectedItem.warehouseId, _shopDTOImpl.shopId);
            }


        }

        private function unassignWarehouseHandler(event:Event):void {

            if (this.addAssignedEnabled && this.assignedWarehousesList.selectedItem != null) {
                remoteWarehouseService.unassignWarehouse(
                        this.assignedWarehousesList.selectedItem.warehouseId, _shopDTOImpl.shopId);
            }
        }

        private function availableWarehousesSelected(event:Event):void {
            addAvailableEnabled = this.availableWarehousesList.selectedItem != null;
        }

        private function assignedWarehouseSelected(event:Event):void {
            addAssignedEnabled = this.assignedWarehousesList.selectedItem != null;
        }


        private function onFaultHandler(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultFaultHandler(event);
        }


        /**
         * Is given warehouse assigned to shop ?
         * @param warehouse warehouse
         * @return true if assigned
         */
        private function isAssigned(warehouse:WarehouseDTOImpl):Boolean {
            for each (var shopWarehouse:Object in assignedWarehouses) {
                if (shopWarehouse.warehouseId == warehouse.warehouseId) {
                    return true;
                }
            }
            return false;
        }

        private function onFindByShopIdResult(event:ResultEvent):void {

            assignedWarehouses = event.result as ArrayCollection;
            availableWarehouses.removeAll();
            for each (var warehouse:WarehouseDTOImpl in allWarehouses) {
                if (!isAssigned(warehouse)) {
                    availableWarehouses.addItem(warehouse);
                }
            }

            addAvailableEnabled = false;
            addAssignedEnabled = false;

        }

        private function onGetAllResult(event:ResultEvent):void {

            this.allWarehouses = event.result as ArrayCollection;
            remoteWarehouseService.findByShopId(_shopDTOImpl.shopId);

        }

        private function onUnassignWarehouseResult(event:ResultEvent):void {
            remoteWarehouseService.getAll();
        }

        private function onAssignWarehouseResult(event:ResultEvent):void {
            remoteWarehouseService.getAll();
        }

        ]]>
    </mx:Script>

    <mx:RemoteObject showBusyCursor="true" id="remoteWarehouseService"
                     destination="remoteWarehouseService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getAll" name="getAll"
                   result="onGetAllResult(event)"
                   fault="onFaultHandler(event)"/>

        <mx:method id="findByShopId" name="findByShopId"
                   result="onFindByShopIdResult(event)"
                   fault="onFaultHandler(event)"/>

        <mx:method id="unassignWarehouse" name="unassignWarehouse"
                   result="onUnassignWarehouseResult(event)"
                   fault="onFaultHandler(event)"/>

        <mx:method id="assignWarehouse" name="assignWarehouse"
                   result="onAssignWarehouseResult(event)"
                   fault="onFaultHandler(event)"/>

    </mx:RemoteObject>

    <mx:ArrayCollection id="availableWarehouses"/>
    <mx:ArrayCollection id="assignedWarehouses"/>
    <mx:ArrayCollection id="allWarehouses"/>

    <mx:Boolean id="addAvailableEnabled">false</mx:Boolean>
    <mx:Boolean id="addAssignedEnabled">false</mx:Boolean>


    <mx:Grid width="100%" height="100%" id="supportedCurrencyPanel">
        <mx:GridRow width="100%" height="50">
            <mx:GridItem width="45%" height="50" textAlign="center" verticalAlign="middle">
                <mx:Label text="@Resource(bundle='StoresManagementPanel',key='availableWarehouses')"/>
            </mx:GridItem>
            <mx:GridItem width="10%" height="50">
            </mx:GridItem>
            <mx:GridItem width="45%" height="50" textAlign="center" verticalAlign="middle">
                <mx:Label text="@Resource(bundle='StoresManagementPanel',key='supportedWarehouses')"/>
            </mx:GridItem>
        </mx:GridRow>
        <mx:GridRow width="100%" height="100%">
            <mx:GridItem width="45%" height="100%">
                <mx:List
                        id="availableWarehousesList"
                        width="100%"
                        height="100%"
                        dataProvider="{availableWarehouses}"
                        labelField="name"
                        doubleClickEnabled="true"
                        doubleClick="assignWarehouseHandler(event)"
                        itemClick="availableWarehousesSelected(event)"
                        >
                </mx:List>
            </mx:GridItem>
            <mx:GridItem width="10%" height="100%" verticalAlign="middle" textAlign="center">
                <mx:VBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center">
                    <mx:Button enabled="{addAvailableEnabled}"
                               label="@Resource(bundle='StoresManagementPanel',key='assign')"
                               toolTip="@Resource(bundle='StoresManagementPanel',key='assignHint')"
                               click="assignWarehouseHandler(event)"/>
                    <mx:Button enabled="{addAssignedEnabled}"
                               label="@Resource(bundle='StoresManagementPanel',key='unassign')"
                               toolTip="@Resource(bundle='StoresManagementPanel',key='unassignHint')"
                               click="unassignWarehouseHandler(event)"/>
                </mx:VBox>
            </mx:GridItem>
            <mx:GridItem width="45%" height="100%">
                <mx:List
                        id="assignedWarehousesList"
                        width="100%"
                        height="100%"
                        dataProvider="{assignedWarehouses}"
                        labelField="name"
                        doubleClickEnabled="true"
                        itemDoubleClick="unassignWarehouseHandler(event)"
                        itemClick="assignedWarehouseSelected(event)"
                        >

                </mx:List>
            </mx:GridItem>
        </mx:GridRow>

    </mx:Grid>
</mx:VBox>
