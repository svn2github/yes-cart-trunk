<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"
          xmlns:attr="org.yes.cart.ui.store.*"
          width="100%" height="100%"
           title="@Resource(bundle='StoresManagementPanel',key='store')"
           paddingLeft="2" paddingTop="2" paddingRight="2" paddingBottom="2"
           creationComplete="init();">
    <mx:Script>
		<![CDATA[
        import mx.events.IndexChangedEvent;

        import org.yes.cart.impl.ShopDTOImpl;

        private var TAB_URL_IDX:int = 1;
        private var TAB_CURRENCY_IDX:int = 2;
        private var TAB_CURRENCY_EXCHANGE_IDX:int = 3;
        private var TAB_CATEGORY_IDX:int = 4;
        private var TAB_WAREHOUSE_IDX:int = 5;
        private var TAB_ATTR_IDX:int = 6;


        private var _shopDTOImpl:ShopDTOImpl;

        private var _newShopCallBack:Function;

        private function init():void {
            editShop();
        }


        public function set shopDTOImpl(value:ShopDTOImpl):void {
            var oldEditMode:Boolean = editingMode;
            _shopDTOImpl = value;
            editingMode = !isNaN(value.shopId) && value.shopId > 0;
            if (!oldEditMode && editingMode && _newShopCallBack != null) {
                _newShopCallBack(_shopDTOImpl);
            }
        }

        private function editShop():void {
            summaryTab.removeAllChildren();
            var storeSummaryPanel:StoreSummaryPanel = new StoreSummaryPanel();
            storeSummaryPanel.shopDTOImpl = _shopDTOImpl;
            storeSummaryPanel.saveCallBack = function (shop:ShopDTOImpl):void {
                shopDTOImpl = shop;
            };
            summaryTab.addChild(storeSummaryPanel);
            initTab(shopTabNavigator.selectedIndex);
        }

        private function urlsTabSelected(event:MouseEvent):void {
            urlTab.removeAllChildren();
            var storeSupportedUrlsPanel:StoreSupportedUrlsPanel = new StoreSupportedUrlsPanel();
            storeSupportedUrlsPanel.setShopDTOImpl(_shopDTOImpl);
            urlTab.addChild(storeSupportedUrlsPanel);
        }

        private function currencyTabSelected(event:MouseEvent):void {
            currencyTab.removeAllChildren();
            var storeSupportedCurrencyPanel:StoreSupportedCurrency = new StoreSupportedCurrency();
            storeSupportedCurrencyPanel.shopDTOImpl = _shopDTOImpl;
            currencyTab.addChild(storeSupportedCurrencyPanel);
        }

        private function currencyExcRateTabSelected(event:MouseEvent):void {
            currencyExcangeTab.removeAllChildren();
            var storeSupportedCurrencyPanel:StoreCurrencyExcahngePanel = new StoreCurrencyExcahngePanel();
            storeSupportedCurrencyPanel.shopDTOImpl = _shopDTOImpl;
            currencyExcangeTab.addChild(storeSupportedCurrencyPanel);
        }

        private function categoryTabSelected(event:MouseEvent):void {
            categoryTab.removeAllChildren();
            var panel:StoreAssignedCategories = new StoreAssignedCategories();
            panel.shopDto = _shopDTOImpl;
            categoryTab.addChild(panel);
        }

        private function warehouseTabSelected(event:MouseEvent):void {
            warehouseTab.removeAllChildren();
            var panel:StoreSupportedWarehouses = new StoreSupportedWarehouses();
            panel.shopDTOImpl = _shopDTOImpl;
            warehouseTab.addChild(panel);
        }

        private function attrTabSelected():void {
            storeNonImagesPanel.shop = this._shopDTOImpl;
        }

        private function onTabClick(event:IndexChangedEvent):void {
            initTab(event.newIndex);
        }

        private function initTab(idx:int):void {
            switch (idx) {
                case TAB_URL_IDX:
                {
                    urlsTabSelected(null);
                    break;
                }
                case TAB_CURRENCY_IDX:
                {
                    currencyTabSelected(null);
                    break;
                }
                case TAB_CURRENCY_EXCHANGE_IDX:
                {
                    currencyExcRateTabSelected(null);
                    break;
                }
                case TAB_CATEGORY_IDX:
                {
                    categoryTabSelected(null);
                    break;
                }
                case TAB_WAREHOUSE_IDX:
                {
                    warehouseTabSelected(null);
                    break;
                }
                case TAB_ATTR_IDX:
                {
                    attrTabSelected();
                    break;
                }

            }

        }

        public function set newShopCallBack(value:Function):void {
            _newShopCallBack = value;
        }
        ]]>
    </mx:Script>

    <mx:Boolean id="editingMode">false</mx:Boolean>

    <mx:TabNavigator width="100%" height="100%" id="shopTabNavigator" change="onTabClick(event);">
        <mx:Canvas label="@Resource(bundle='StoresManagementPanel',key='summary')" width="100%" height="100%"
                   id="summaryTab"/>
        <mx:Canvas label="@Resource(bundle='StoresManagementPanel',key='urls')" width="100%" height="100%"
                   id="urlTab" enabled="{editingMode}"/>
        <mx:Canvas label="@Resource(bundle='StoresManagementPanel',key='currency')" width="100%" height="100%"
                   id="currencyTab" enabled="{editingMode}"/>
        <mx:Canvas label="@Resource(bundle='StoresManagementPanel',key='currencyExcRate')" width="100%" height="100%"
                   id="currencyExcangeTab" enabled="{editingMode}"/>
        <mx:Canvas label="@Resource(bundle='StoresManagementPanel',key='catalog')" width="100%" height="100%"
                   id="categoryTab" enabled="{editingMode}"/>
        <mx:Canvas id="warehouseTab" label="@Resource(bundle='StoresManagementPanel',key='warehouses')"
                   width="100%" height="100%" enabled="{editingMode}"/>
        <!--<mx:Canvas enabled="false" label="@Resource(bundle='StoresManagementPanel',key='payments')" width="100%"
                   height="100%"/>
        <mx:Canvas enabled="false" label="@Resource(bundle='StoresManagementPanel',key='customers')" width="100%"
                   height="100%"/>
        <mx:Canvas enabled="false" label="@Resource(bundle='StoresManagementPanel',key='marketing')" width="100%"
                   height="100%"/>
        <mx:Canvas enabled="false" label="@Resource(bundle='StoresManagementPanel',key='taxes')" width="100%"
                   height="100%"/>-->
        <attr:StoreNonImageAttributesPanel id="storeNonImagesPanel" enabled="{editingMode}"/>
    </mx:TabNavigator>


</mx:Panel>
