<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%"
           height="100%"
           creationComplete="init();">
    <mx:Script>
		<![CDATA[
        import mx.core.FlexGlobals;
        import mx.events.ListEvent;

        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import flash.events.MouseEvent;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.ListEvent;

        import mx.managers.PopUpManager;

        public function init():void {
            remoteUserManagmentService.getRolesList();
        }

        private function handle_roleSelectedClick(event:ListEvent):void {
            roleSelected = this.roleDataGrid.selectedItem != null;
        }


        private var newPopUp:RoleCreateEditDialog;

        private function newRole_clickHandler(event:MouseEvent):void {
            newPopUp = RoleCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), RoleCreateEditDialog, true));
            newPopUp.saveBtn.addEventListener("click", createNewRole);
            newPopUp.createNewRole();
            PopUpManager.centerPopUp(newPopUp);
        }

        private function editRole_clickHandler(event:Event):void {
            var selectedRole:Object = this.roleDataGrid.selectedItem;
            if (selectedRole != null) {
                newPopUp = RoleCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), RoleCreateEditDialog, true));
                newPopUp.saveBtn.addEventListener("click", updateRole);
                newPopUp.editRole(selectedRole.code, selectedRole.description);
                PopUpManager.centerPopUp(newPopUp);
            }
        }

        private function createNewRole(event:Event):void {

            remoteUserManagmentService.addRole(
                    newPopUp.role.text,
                    newPopUp.description.text
                    );
            PopUpManager.removePopUp(newPopUp);
            remoteUserManagmentService.getRolesList();
            roleSelected = false;

        }

        private function updateRole(event:Event):void {

            remoteUserManagmentService.updateRole(
                    newPopUp.role.text,
                    newPopUp.description.text
                    );
            PopUpManager.removePopUp(newPopUp);
            remoteUserManagmentService.getRolesList();
        }


        private function deleteRoleClickHandler(event:flash.events.MouseEvent):void {
            if (this.roleSelected) {
                Alert.show(
                        resourceManager.getString('RoleManagmentPanel', 'deleteRoleConfirm', [ this.roleDataGrid.selectedItem.code ]),
                        resourceManager.getString('RoleManagmentPanel', 'warning'),
                        Alert.OK | Alert.CANCEL, this, deleteRole, null, Alert.OK);
            }
        }

        private function deleteRole(event:CloseEvent):void {
            if (event.detail == Alert.OK && this.roleDataGrid.selectedItem != null) {
                var code:String = this.roleDataGrid.selectedItem.code;
                remoteUserManagmentService.deleteRole(code);
                Alert.show(
                        resourceManager.getString('RoleManagmentPanel', 'roleDeletedConfirm', [ code ]),
                        resourceManager.getString('RoleManagmentPanel', 'info'));
            }
            roleSelected = false;
            remoteUserManagmentService.getRolesList();
        }
        ]]>
    </mx:Script>

    <mx:RemoteObject showBusyCursor="true"  id="remoteUserManagmentService"
                     destination="remoteUserManagmentService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>


    <mx:Boolean id="roleSelected">false</mx:Boolean>


    <mx:HBox paddingTop="5" width="100%">

        <mx:Button label="@Resource(bundle='RoleManagmentPanel',key='newRole')"
                   toolTip="@Resource(bundle='RoleManagmentPanel',key='newRoleToolTip')"
                   click="newRole_clickHandler(event)"/>
        <mx:Button label="@Resource(bundle='RoleManagmentPanel',key='editRole')"
                   toolTip="@Resource(bundle='RoleManagmentPanel',key='editRoleToolTip')"
                   enabled="{roleSelected}"
                   click="editRole_clickHandler(event)"/>
        <mx:Button label="@Resource(bundle='RoleManagmentPanel',key='deleteRole')"
                   toolTip="@Resource(bundle='RoleManagmentPanel',key='deleteRoleToolTip')"
                   enabled="{roleSelected}"
                   click="deleteRoleClickHandler(event)"/>
    </mx:HBox>
    <mx:DataGrid id="roleDataGrid"
                 width="100%" height="100%"
                 dataProvider="{remoteUserManagmentService.getRolesList.lastResult}"
                 doubleClickEnabled="true"
                 itemDoubleClick="editRole_clickHandler(event)"
                 itemClick="handle_roleSelectedClick(event)">
        <mx:columns>
            <mx:DataGridColumn headerText="@Resource(bundle='RoleManagmentPanel',key='role')" dataField="code"/>
            <mx:DataGridColumn headerText="@Resource(bundle='RoleManagmentPanel',key='description')" dataField="description"/>
        </mx:columns>
    </mx:DataGrid>

</mx:VBox>