<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:controls="controls.*" width="100%" height="100%">

    <mx:Script><![CDATA[
        import com.hexagonstar.util.debug.Debug;

        import mx.binding.utils.BindingUtils;
        import mx.binding.utils.ChangeWatcher;
        import mx.collections.ArrayList;
        import mx.events.PropertyChangeEvent;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.event.DtoEvent;

        import org.yes.cart.impl.SeoDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;
        import org.yes.cart.util.DomainUtils;


        [Bindable]
        private var seoDTOImpl:SeoDTOImpl;

        private var _seoId:Number;


        public function get seoId():Number {
            return _seoId;
        }

        public function set seoId(value:Number):void {
            _seoId = value;
            onSeoIdChanged();
        }

        public function onSeoIdChanged():void {
            if (DomainUtils.isNewPK(seoId)) {
                this.seoDTOImpl = new SeoDTOImpl();
                bind();
                clearVisible = false;

            } else {
                remoteSeoService.getById(seoId);
            }

        }


        private function onGetByIdResult(event:ResultEvent):void {
            seoDTOImpl = SeoDTOImpl(event.result);
            clearVisible = true;
            bind();

        }

        private function seoDTOChanged(event:PropertyChangeEvent):void {
            saveDiscardVisible = true;
        }

        /**
         * Remove deom db seo by id and update entity in remote callback
         * @param event event
         * @return nothing
         */
        private function onClearBtnClick(event:MouseEvent):void {

            var seo:SeoDTOImpl = seoDTOImpl;
            Debug.trace("INFO SeoPanel seoDTOImpl to clear is " + seoDTOImpl);
            unbind();
            seoDTOImpl = new SeoDTOImpl();
            bind();
            clearVisible = false;
            dispatchEvent(new DtoEvent(DtoEvent.REMOVE, seo));

        }


        private function onSaveBtnClick(event:MouseEvent):void {
            if (DomainUtils.isNewPK(seoDTOImpl.seoId)) {
                remoteSeoService.create(seoDTOImpl);
            } else {
                remoteSeoService.update(seoDTOImpl);
            }
        }

        private function onCreateUpdateResult(event:ResultEvent):void {
            unbind();
            seoDTOImpl = SeoDTOImpl(event.result);
            bind();
            saveDiscardVisible = false;
            dispatchEvent(new DtoEvent(DtoEvent.UPDATE, seoDTOImpl));

        }

        private var changeWatchers:ArrayList = new ArrayList();

        private function unbind():void {
            for (var i:int = 0; i < changeWatchers.length; i++) {
                var cw:ChangeWatcher = ChangeWatcher(changeWatchers.getItemAt(i));
                cw.unwatch();
            }
            changeWatchers.removeAll();
        }

        private function bind():void {

            unbind();

            BindingUtils.bindProperty(uriTextInput, "text", this.seoDTOImpl, "uri");
            BindingUtils.bindProperty(titleTextInput, "text", this.seoDTOImpl, "title");
            BindingUtils.bindProperty(metakeywordsTextInput, "text", this.seoDTOImpl, "metakeywords");
            BindingUtils.bindProperty(metadescriptionTextInput, "text", this.seoDTOImpl, "metadescription");

            BindingUtils.bindProperty(this.seoDTOImpl, "uri", uriTextInput, "text");
            BindingUtils.bindProperty(this.seoDTOImpl, "title", titleTextInput, "text");
            BindingUtils.bindProperty(this.seoDTOImpl, "metakeywords", metakeywordsTextInput, "text");
            BindingUtils.bindProperty(this.seoDTOImpl, "metadescription", metadescriptionTextInput, "text");

            ChangeWatcher.watch(this.seoDTOImpl, "uri", seoDTOChanged);
            ChangeWatcher.watch(this.seoDTOImpl, "title", seoDTOChanged);
            ChangeWatcher.watch(this.seoDTOImpl, "metakeywords", seoDTOChanged);
            ChangeWatcher.watch(this.seoDTOImpl, "metadescription", seoDTOChanged);
        }

        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        ]]>
    </mx:Script>

    <mx:RemoteObject showBusyCursor="true"
                     id="remoteSeoService"
                     destination="remoteSeoService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getById" name="getById"
                   result="onGetByIdResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="create" name="create"
                   result="onCreateUpdateResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="update" name="update"
                   result="onCreateUpdateResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:Boolean id="saveDiscardVisible">false</mx:Boolean>
    <mx:Boolean id="clearVisible">false</mx:Boolean>


    <mx:VBox id="mainPanel" width="100%" height="100%">
        <mx:Form id="seoForm" width="100%">
            <mx:FormItem label="@Resource(bundle='SeoPanel',key='url')" width="100%">
                <mx:TextInput id="uriTextInput" width="100%"/>
            </mx:FormItem>
            <mx:FormItem label="@Resource(bundle='SeoPanel',key='title')" width="100%">
                <mx:TextInput id="titleTextInput" width="100%"/>
            </mx:FormItem>
            <mx:FormItem label="@Resource(bundle='SeoPanel',key='metakeywords')" width="100%">
                <mx:TextArea id="metakeywordsTextInput" width="100%" height="50"/>
            </mx:FormItem>
            <mx:FormItem label="@Resource(bundle='SeoPanel',key='metadescription')" width="100%">
                <mx:TextArea id="metadescriptionTextInput" width="100%" height="50"/>
            </mx:FormItem>
        </mx:Form>
        <mx:ControlBar horizontalAlign="right" width="100%">

            <mx:Button enabled="{saveDiscardVisible}"
                       label="@Resource(bundle='SeoPanel',key='save')"
                       click="onSaveBtnClick(event)"/>
            <!-- TODO: revise clearing data since we have cascade problem. revise after YC-18
            <mx:Button enabled="{clearVisible}"
                       label="@Resource(bundle='SeoPanel',key='clear')"
                       toolTip="@Resource(bundle='SeoPanel',key='clearHint')"
                       click="onClearBtnClick(event)"
                    />
                    -->

        </mx:ControlBar>
    </mx:VBox>


</mx:Canvas>
