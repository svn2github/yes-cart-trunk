<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%"
           height="100%"
           creationComplete="initIndexPanel()">

	<mx:Script>
		<![CDATA[
        import org.yes.cart.impl.JobStatusImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        private var indexJobToken:String;

        private var indexStatusTimer:Timer = new Timer(15000, 1); // 15 sec timer

        private function onReindexBtnClick(event:MouseEvent):void {

            reindexBtn.enabled = false;
            reindexService.reindexAllProducts();

        }

        private function onReindexAllProductsFault(event:FaultEvent):void {

            resultDetails.text = resourceManager.getString("ReindexPanel", "reindexFailedOk") + event.fault;
            reindexBtn.enabled = true;
        }

        private function onReindexAllProductsResult(event:ResultEvent):void {
            indexJobToken = event.result as String;
            jobToken.text = indexJobToken;
            indexStatusTimer.start(); // start the status update timer
        }

        private function initIndexPanel():void {

            indexStatusTimer.addEventListener(TimerEvent.TIMER_COMPLETE, onStatusTimerComplete);

        }

        private function onStatusTimerComplete(event:TimerEvent):void {

            if (jobToken.text != null) {
                reindexService.getIndexAllStatus(indexJobToken);
            }

        }

        private function onWatchClick(event:MouseEvent):void {

            if (jobToken.text != null) {
                indexJobToken = jobToken.text;
                reindexService.getIndexAllStatus(indexJobToken);
            }

        }

        private function onGetIndexAllStatusResult(event:ResultEvent):void {
            var status:JobStatusImpl = event.result as JobStatusImpl;
            resultDetails.text = status.report;
            if (status.state == 'INPROGRESS' || status.state == 'STARTED') {
                indexStatusTimer.start(); // do another timed status update
            }
        }
        ]]>
	</mx:Script>


	<mx:RemoteObject showBusyCursor="true"  id="reindexService"
					 destination="reindexService"
					 channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="reindexAllProducts" name="reindexAllProducts"
                   result="onReindexAllProductsResult(event)"
                   fault="onReindexAllProductsFault(event)"/>

        <mx:method id="getIndexAllStatus" name="getIndexAllStatus"
                   result="onGetIndexAllStatusResult(event)"
                   fault="onReindexAllProductsFault(event)"/>

    </mx:RemoteObject>

	<mx:Panel height="100%" width="100%" title="@Resource(bundle='ReindexPanel',key='reindexProducts')"
              paddingLeft="2" paddingTop="2" paddingRight="2" paddingBottom="2">

        <mx:VBox width="100%" height="100%">

            <mx:Text width="100%" text="@Resource(bundle='ReindexPanel',key='description')"/>

            <mx:Form width="100%" height="120">
                <mx:FormHeading label="@Resource(bundle='ReindexPanel',key='reindexMessage')"/>
                <mx:FormItem label="@Resource(bundle='ReindexPanel',key='startMessage')">
                    <mx:Button id="reindexBtn" label="@Resource(bundle='ReindexPanel',key='start')" click="onReindexBtnClick(event)"/>
                </mx:FormItem>
                <mx:FormItem label="@Resource(bundle='BulkImportPanel',key='jobToken')">
                    <mx:HBox>
                        <mx:TextInput id="jobToken" width="200"/>
                        <mx:Button id="watchBtn" label="@Resource(bundle='BulkImportPanel',key='watch')"
                                   click="onWatchClick(event)"/>
                    </mx:HBox>
                </mx:FormItem>
            </mx:Form>

            <mx:TextArea id="resultDetails" width="100%" height="100%"/>

        </mx:VBox>
	</mx:Panel>

</mx:Canvas>
