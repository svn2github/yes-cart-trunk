<?xml version="1.0" ?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:georg="com.georg.*"
           label="@Resource(bundle='CustomerManagementPanel',key='customerOrders')"
           width="100%" height="100%"
           creationComplete="init();">

    <mx:RemoteObject showBusyCursor="true" id="remoteCustomerOrderService"
                     destination="remoteCustomerOrderService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="findCustomerOrdersByCriteria" name="findCustomerOrdersByCriteria"
                   result="onFindCustomerOrdersByCriteriaResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:VBox width="100%" height="100%" paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">
        <mx:HBox>
            <mx:ComboBox id="statusComboBox" width="120"
                         prompt="@Resource(bundle='CustomerOrderPanel',key='selectStatusPropmt')"
                         dataProvider="{statuses}"
                         data="code" labelField="name"
                    />
            <mx:Label text="@Resource(bundle='CustomerOrderPanel',key='orderNumberFilter')"/>
            <mx:TextInput id="orderNumberFilterValue" width="150"/>
            <mx:Button height="100%" label="@Resource(bundle='CustomerOrderPanel',key='applyFilter')"
                       toolTip="@Resource(bundle='CustomerOrderPanel',key='applyFilterToolTip')"
                       click="onApplyFilterClick(event)"
                    />
            <mx:Button height="100%" label="@Resource(bundle='CustomerOrderPanel',key='clearFilter')"
                       toolTip="@Resource(bundle='CustomerOrderPanel',key='clearFilterToolTip')"
                       click="onCleanFilterClick(event)"/>
        </mx:HBox>
        <mx:HBox>
            <mx:Label text="@Resource(bundle='CustomerOrderPanel',key='orderFromDateFilter')"/>
            <georg:DateTimeField id="orderFromDateField" width="130"/>
            <mx:Label text="@Resource(bundle='CustomerOrderPanel',key='orderToDateFilter')"/>
            <georg:DateTimeField id="orderToDateField" width="130"/>
        </mx:HBox>
        <mx:DataGrid width="100%" height="100%" id="customerOrdersGrid"
                     dataTipFunction="orderToolTip">

            <mx:columns>
                <mx:DataGridColumn showDataTips="true" width="50"
                                   headerText="@Resource(bundle='CustomerOrderPanel',key='id')"
                                   dataField="customerorderId" />
                <mx:DataGridColumn showDataTips="true" width="70" headerText="@Resource(bundle='CustomerOrderPanel',key='orderNum')"
                                   dataField="ordernum"/>
                <mx:DataGridColumn showDataTips="true" width="120" headerText="@Resource(bundle='CustomerOrderPanel',key='shopper')"
                                   sortable="false">
                    <mx:itemRenderer>
                        <mx:Component>
                            <mx:VBox>
                                <mx:Text text="{data.fullname}"/>
                                <mx:Text text="{data.email}"/>
                            </mx:VBox>
                        </mx:Component>
                    </mx:itemRenderer>
                </mx:DataGridColumn>

                <mx:DataGridColumn showDataTips="true" width="50" headerText="@Resource(bundle='CustomerOrderPanel',key='amount')"
                                   dataField="amount"/>
                <mx:DataGridColumn showDataTips="true" width="50" headerText="@Resource(bundle='CustomerOrderPanel',key='currency')"
                                   dataField="currency"/>
                <mx:DataGridColumn showDataTips="true" width="50"
                                   headerText="@Resource(bundle='CustomerOrderPanel',key='status')"
                                   labelFunction="statusLabelFunction"/>
                <mx:DataGridColumn showDataTips="true" width="50" headerText="@Resource(bundle='CustomerOrderPanel',key='date')"
                                   dataField="orderTimestamp"/>


            </mx:columns>


        </mx:DataGrid>

    </mx:VBox>
    <mx:ArrayCollection id="statuses"/>


    <mx:Script><![CDATA[
        import mx.events.ListEvent;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.shopmanager.ShopManagerGlobal;

        [Bindable]
        private var _customerId:Number = 0;

        public function get customerId():Number {
            return _customerId;
        }

        public function set customerId(value:Number):void {
            if (_customerId == value) {
                return;
            }
            _customerId = value;
            performSearch();
        }

        public function init():void {

            statuses.addItem(createStatusObject("all"));
            statuses.addItem(createStatusObject("os.none"));
            statuses.addItem(createStatusObject("os.pending"));
            statuses.addItem(createStatusObject("os.waiting"));
            statuses.addItem(createStatusObject("os.in.progress"));
            statuses.addItem(createStatusObject("os.cancelled"));
            statuses.addItem(createStatusObject("os.partially.shipped"));
            statuses.addItem(createStatusObject("os.completed"));

        }

        private function createStatusObject(status:String):Object {
            return {
                code:status,
                name:resourceManager.getString('Common', status)
            };
        }


        private function statusLabelFunction(item:Object, column:DataGridColumn):String {

            return resourceManager.getString('CustomerOrderPanel', item.orderStatus);

        }

        private function orderToolTip(item:Object):String {
            var toolTip:String = "";
            if (item != null) {


                if (item.billingAddress == item.shippingAddress) {
                    toolTip += resourceManager.getString('CustomerOrderPanel', "address") + " ";
                    toolTip += " " + item.shippingAddress + "\n";
                } else {
                    //two  different addresses
                    toolTip += resourceManager.getString('CustomerOrderPanel', "deliveryAddr") + " ";
                    toolTip += " " + item.shippingAddress + "\n";
                    toolTip += resourceManager.getString('CustomerOrderPanel', "billingAddr") + " ";
                    toolTip += " " + item.billingAddress + "\n";
                }
                toolTip += resourceManager.getString('CustomerOrderPanel', "shop") + " ";
                toolTip += " " + item.code + "\n";


            }

            return toolTip;
        }

        private function performSearch():void {

            var status:Object = statusComboBox.selectedItem;

            remoteCustomerOrderService.findCustomerOrdersByCriteria(
                    customerId,
                    null,
                    null,
                    null,
                    (status == null || status == 'code' || status.code == 'all') ? null : status.code,
                    orderFromDateField.selectedDate,
                    orderToDateField.selectedDate,
                    orderNumberFilterValue.text
            );

        }

        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onFindCustomerOrdersByCriteriaResult(event:ResultEvent):void {
            customerOrdersGrid.dataProvider = event.result;
        }

        private function onApplyFilterClick(event:MouseEvent):void {
            performSearch();
        }

        private function onCleanFilterClick(event:MouseEvent):void {
            statusComboBox.selectedItem = null;
            statusComboBox.selectedIndex = -1;
            orderNumberFilterValue.text = null;
            orderFromDateField.selectedDate = null;
            orderToDateField.selectedDate = null;
        }
        ]]></mx:Script>

</mx:Canvas>