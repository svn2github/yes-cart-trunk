<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%" height="100%" creationComplete="initPanel()">


    <mx:Script>
    <![CDATA[
        import mx.collections.ArrayCollection;
        import mx.containers.VDividedBox;
        import mx.controls.DataGrid;
        import mx.controls.TextArea;
        import mx.events.IndexChangedEvent;
        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.shopmanager.ShopManagerGlobal;


        private function addNewTab():void {
            //queryTabNavigator.add
            var divBox:VDividedBox = new VDividedBox();
            divBox.label = String(queryType.selectedValue);
            divBox.percentHeight = 100;
            divBox.percentWidth = 100;
            divBox.setStyle('paddingLeft', 2);
            divBox.setStyle('paddingRight', 2);
            divBox.setStyle('paddingTop', 2);
            divBox.setStyle('paddingBottom', 2);

            var textArea:TextArea = new TextArea();
            textArea.percentWidth = 100;
            textArea.height = 150;

            var dataGrid:DataGrid = new DataGrid();
            dataGrid.percentWidth = 100;


            divBox.addChild(textArea);

            divBox.addChild(dataGrid);

            queryTabNavigator.addChild(divBox);
        }

        private function onAddTabClick(event:MouseEvent):void {
            addNewTab();
        }

        private function onTabClick(event:IndexChangedEvent):void {

        }


        private function onDeleteTabClick(event:MouseEvent):void {
            queryTabNavigator.removeChildAt(queryTabNavigator.selectedIndex);
        }

        private function onExecuteQueryClick(event:MouseEvent):void {

            var sqlLabel:String = resourceManager.getString('QueryPanel', 'sql');
            var hsqlLabel:String = resourceManager.getString('QueryPanel', 'hsql');
            var luceneLabel:String = resourceManager.getString('QueryPanel', 'lucene');
            var node:String = node.selectedItem as String;

            var query:String = ((queryTabNavigator.selectedChild as VDividedBox).getChildAt(0) as TextArea).text;

            if (sqlLabel == (queryTabNavigator.selectedChild as VDividedBox).label) {

                remoteDevService.sqlQuery(query, node);

            } else if (hsqlLabel == (queryTabNavigator.selectedChild as VDividedBox).label) {

                remoteDevService.hsqlQuery(query, node);

            } else if (luceneLabel == (queryTabNavigator.selectedChild as VDividedBox).label) {

                remoteDevService.luceneQuery(query, node);

            }

        }

        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onSqlQueryResult(event:ResultEvent):void {

            var dataGrid:DataGrid = ((queryTabNavigator.selectedChild as VDividedBox).getChildAt(1) as DataGrid);
            dataGrid.dataProvider = event.result;

        }

        private function onHSqlQueryResult(event:ResultEvent):void {

            var dataGrid:DataGrid = ((queryTabNavigator.selectedChild as VDividedBox).getChildAt(1) as DataGrid);
            dataGrid.dataProvider = event.result;

        }

        private function onLuceneQueryResult(event:ResultEvent):void {

            var dataGrid:DataGrid = ((queryTabNavigator.selectedChild as VDividedBox).getChildAt(1) as DataGrid);
            dataGrid.dataProvider = event.result;

        }

        private function initPanel():void {
            addNewTab();
            remoteNodeService.getCluster();
        }

        private function onGetClusterResult(event:ResultEvent):void {
            var _nodes:Object = event.result;
            var _all:ArrayCollection = new ArrayCollection();
            for each (var node:Object in _nodes) {
                _all.addItem(node['nodeId']);
            }
            nodes.removeAll();
            nodes.addAll(_all);
            nodes.refresh();
            node.selectedIndex = 0;
        }

        ]]>
    </mx:Script>

    <mx:RemoteObject showBusyCursor="true" id="remoteNodeService"
                     fault="onRpcMethodFault(event)"
                     destination="remoteNodeService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getCluster" name="getCluster"
                   result="onGetClusterResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>


    <mx:RemoteObject showBusyCursor="true" id="remoteDevService"
                     fault="onRpcMethodFault(event)"
                     destination="remoteDevService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="sqlQuery" name="sqlQuery"
                   result="onSqlQueryResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="hsqlQuery" name="hsqlQuery"
                   result="onHSqlQueryResult(event)"
                   fault="onRpcMethodFault(event)"/>

        <mx:method id="luceneQuery" name="luceneQuery"
                   result="onLuceneQueryResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:ArrayCollection id="nodes"/>

    <mx:Panel width="100%" height="100%" title="@Resource(bundle='QueryPanel',key='query')"
            paddingLeft="2" paddingRight="2" paddingTop="2" paddingBottom="2">

        <mx:HBox paddingTop="5" width="100%">

            <mx:RadioButtonGroup id="queryType"/>

            <mx:Label text="@Resource(bundle='QueryPanel',key='queryType')"/>

            <mx:RadioButton group="{queryType}" selected="true" id="Sql" label="@Resource(bundle='QueryPanel',key='sql')"/>
            <mx:RadioButton group="{queryType}" id="Hsql" label="@Resource(bundle='QueryPanel',key='hsql')"/>
            <mx:RadioButton group="{queryType}" id="Lucene" label="@Resource(bundle='QueryPanel',key='lucene')"/>

            <mx:ComboBox id="node" dataProvider="{nodes}"/>


            <mx:Button id="executeQueryBtn" toolTip="@Resource(bundle='QueryPanel',key='executeHint')"
                       label="@Resource(bundle='QueryPanel',key='execute')" click="onExecuteQueryClick(event)"/>
            <mx:Button id="addTabBtn" toolTip="@Resource(bundle='QueryPanel',key='newTabHint')"
                       label="@Resource(bundle='QueryPanel',key='newTab')" click="onAddTabClick(event)"/>
            <mx:Button id="deleteTabBtn" toolTip="@Resource(bundle='QueryPanel',key='deleteTabHint')"
                       label="@Resource(bundle='QueryPanel',key='deleteTab')" click="onDeleteTabClick(event)"/>

        </mx:HBox>

        <mx:TabNavigator id="queryTabNavigator" width="100%" height="100%"/>

    </mx:Panel>

</mx:Canvas>
