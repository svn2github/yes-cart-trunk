<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
         creationComplete="init();"
         width="100%" height="100%"
         paddingLeft="2" paddingTop="2" paddingRight="2" paddingBottom="2">
    <mx:Script>
            <![CDATA[
        import org.yes.cart.impl.ShopDTOImpl;

        import mx.binding.utils.BindingUtils;
        import mx.collections.ArrayList;
        import mx.binding.utils.ChangeWatcher;
        import mx.events.PropertyChangeEvent;

        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.shopmanager.ShopManagerGlobal;
        import org.yes.cart.util.DomainUtils;

        private var _shopDTOImpl:ShopDTOImpl;

        private var changeWatchers:ArrayList = new ArrayList();

        /**
         * Bind values and start looking for changes.
         * @return nothing
         */
        private function init():void {

            BindingUtils.bindProperty(codeTextInput, "text", this._shopDTOImpl, "code");
            BindingUtils.bindProperty(nameTextInput, "text", this._shopDTOImpl, "name");
            BindingUtils.bindProperty(descriptionTextInput, "text", this._shopDTOImpl, "description");
            BindingUtils.bindProperty(fspointerTextInput, "text", this._shopDTOImpl, "fspointer");
            BindingUtils.bindProperty(imgpointerTextInput, "text", this._shopDTOImpl, "imageVaultFolder");

            BindingUtils.bindProperty(this._shopDTOImpl, "code", codeTextInput, "text");
            BindingUtils.bindProperty(this._shopDTOImpl, "name", nameTextInput, "text");
            BindingUtils.bindProperty(this._shopDTOImpl, "description", descriptionTextInput, "text");
            BindingUtils.bindProperty(this._shopDTOImpl, "fspointer", fspointerTextInput, "text");
            BindingUtils.bindProperty(this._shopDTOImpl, "imageVaultFolder", imgpointerTextInput, "text");

            newStoreFlag = DomainUtils.isNewPK(this._shopDTOImpl.shopId);
            codeTextInput.enabled = newStoreFlag;

            initWatchers();

        }

        private function initWatchers():void {
            if (changeWatchers != null) {
                for each (var cw:ChangeWatcher in changeWatchers) {
                    cw.unwatch();
                }
                changeWatchers.removeAll();
            }
            changeWatchers.addItem(ChangeWatcher.watch(this._shopDTOImpl, "code", dtoChanged));
            changeWatchers.addItem(ChangeWatcher.watch(this._shopDTOImpl, "name", dtoChanged));
            changeWatchers.addItem(ChangeWatcher.watch(this._shopDTOImpl, "description", dtoChanged));
            changeWatchers.addItem(ChangeWatcher.watch(this._shopDTOImpl, "fspointer", dtoChanged));
            changeWatchers.addItem(ChangeWatcher.watch(this._shopDTOImpl, "imageVaultFolder", dtoChanged));
        }

        public function dtoChanged(event:PropertyChangeEvent):void {
            dtoChangedFlag = true;
        }


        public function set shopDTOImpl(value:ShopDTOImpl):void {
            _shopDTOImpl = value;
        }

        private function onSaveBtnClick(event:flash.events.MouseEvent):void {

            if (newStoreFlag) {
                remoteShopService.create(_shopDTOImpl);
            } else {
                remoteShopService.update(_shopDTOImpl);
            }
        }

        private function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onCreateResult(event:ResultEvent):void {
            this._shopDTOImpl = event.result as ShopDTOImpl;
            init();
            dtoChangedFlag = false;
        }

        private function onUpdateResult(event:ResultEvent):void {
            this._shopDTOImpl = event.result as ShopDTOImpl;
            init();
            dtoChangedFlag = false;
        }
        ]]>
    </mx:Script>
    <mx:Boolean id="dtoChangedFlag">false</mx:Boolean>
    <mx:Boolean id="newStoreFlag">false</mx:Boolean>

    <mx:RemoteObject showBusyCursor="true" id="remoteShopService"
                     destination="remoteShopService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="create" name="create"
                   result="onCreateResult(event)"
                   fault="onRpcMethodFault(event)"/>
        <mx:method id="update" name="update"
                   result="onUpdateResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:Form>
        <mx:FormItem label="@Resource(bundle='StoreSummaryPanel',key='code')">
                <mx:TextInput id="codeTextInput" width="245"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='StoreSummaryPanel',key='name')">
                <mx:TextInput id="nameTextInput" width="245"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='StoreSummaryPanel',key='description')">
                <mx:TextArea id="descriptionTextInput" height="100" width="245"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='StoreSummaryPanel',key='themeLocation')">
                <mx:TextInput id="fspointerTextInput" width="245"/>
        </mx:FormItem>
        <mx:FormItem label="@Resource(bundle='StoreSummaryPanel',key='imagesLocation')">
                <mx:TextInput id="imgpointerTextInput" width="245"/>
        </mx:FormItem>
    </mx:Form>
    <mx:ControlBar horizontalAlign="left">
        <mx:Button id="saveBtn"
                   click="onSaveBtnClick(event)"
                   label="@Resource(bundle='StoreSummaryPanel',key='save')"
                   enabled="{dtoChangedFlag}"
                   />
    </mx:ControlBar>

</mx:VBox>
