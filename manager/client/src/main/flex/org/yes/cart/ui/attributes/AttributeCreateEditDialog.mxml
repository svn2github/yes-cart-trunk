<?xml version="1.0" encoding="utf-8"?>
<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:yci18n="org.yes.cart.ui.i18n.*"
                title="Create attribute"
                showCloseButton="true"
                close="PopUpManager.removePopUp(this)">

    <mx:Boolean id="newAttributeFlag">false</mx:Boolean>

    <mx:Form>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='code')">
            <mx:TextInput  width="160" id="code" enabled="{newAttributeFlag}"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='name')">
            <mx:TextInput width="160" id="attrName"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='displayName')">
            <yci18n:i18nStringField id="displayNames"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='type')">
            <mx:ComboBox change="etypeChangeEvt(event)"
                         x="152" y="84" width="160" id="type"
                         labelField="businesstype" data="etypeId"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='mandatory')">
            <mx:CheckBox  id="mandatory"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='value')">
            <mx:TextInput  width="160" id="val" enabled="{mandatory.selected}"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='multipleValue')">
            <mx:CheckBox  width="160"  id="multiple"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='failover')">
            <mx:CheckBox   id="failover"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='regexp')">
            <mx:TextInput width="160" id="regexp"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='validationMessage')">
            <mx:TextArea width="160" id="validationFailedMessage"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='rank')">
            <mx:TextInput width="160" id="rank"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='choiceData')">
            <mx:TextArea width="160" id="choiceData"/>
        </mx:FormItem>
        <mx:FormItem  width="100%" label="@Resource(bundle='AttributeCreateEditDialog',key='description')">
            <mx:TextArea  width="160" id="description"/>
        </mx:FormItem>

    </mx:Form>

    <mx:ControlBar horizontalAlign="right" width="100%">
        <mx:Button  id="saveBtn" label="@Resource(bundle='ShopManagerApplication',key='save')"/>
        <mx:Button id="closeBtn" label="@Resource(bundle='ShopManagerApplication',key='close')"
                   click="PopUpManager.removePopUp(this)"/>
    </mx:ControlBar>

	<mx:Script>
		<![CDATA[
        import org.yes.cart.impl.AttributeDTOImpl;

        import mx.binding.utils.BindingUtils;
        import mx.managers.PopUpManager;

        import com.hexagonstar.util.debug.Debug;


        private var _attrbuteDTO:AttributeDTOImpl;


        private function etypeChangeEvt(event:Event):void {
            _attrbuteDTO.etypeId = event.currentTarget.selectedItem.etypeId;
        }


        private function init():void {

            displayNames.setSourceObject(_attrbuteDTO, 'displayNames');

            if (newAttributeFlag) {
                this.title = resourceManager.getString('AttributeCreateEditDialog', 'newAttribute');
                saveBtn.label = resourceManager.getString('AttributeCreateEditDialog', 'create');
            } else {
                this.title = resourceManager.getString('AttributeCreateEditDialog', 'editAttribute');
                saveBtn.label = resourceManager.getString('AttributeCreateEditDialog', 'update');
            }
            BindingUtils.bindProperty(_attrbuteDTO, "code", code, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "name", attrName, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "description", description, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "val", val, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "mandatory", mandatory, "selected");
            BindingUtils.bindProperty(_attrbuteDTO, "allowduplicate", multiple, "selected");
            BindingUtils.bindProperty(_attrbuteDTO, "allowfailover", failover, "selected");
            BindingUtils.bindProperty(_attrbuteDTO, "regexp", regexp, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "validationFailedMessage", validationFailedMessage, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "choiceData", choiceData, "text");
            BindingUtils.bindProperty(_attrbuteDTO, "rank", rank, "text");
            //BindingUtils.bindProperty(attrbuteDTO, "etypeId", type, "selectedItem.etypeId");
        }

        public function editAttr(attrbuteDTO:AttributeDTOImpl):void {
            newAttributeFlag = false;
            this._attrbuteDTO = attrbuteDTO;
            this.code.text = attrbuteDTO.code;
            this.attrName.text = attrbuteDTO.name;
            this.description.text = attrbuteDTO.description;
            this.val.text = attrbuteDTO.val;
            this.mandatory.selected = attrbuteDTO.mandatory;
            this.failover.selected = attrbuteDTO.allowfailover;
            this.multiple.selected = attrbuteDTO.allowduplicate;
            this.regexp.text = attrbuteDTO.regexp;
            this.validationFailedMessage.text = attrbuteDTO.validationFailedMessage;
            this.choiceData.text = attrbuteDTO.choiceData;
            this.rank.text = attrbuteDTO.rank.toString();

            for (var i:int = 0; i < type.dataProvider.length; i++) {
                var candidate:Object = type.dataProvider[i];
                if (candidate.etypeId == attrbuteDTO.etypeId) {
                    type.selectedItem = candidate;
                    break;
                }
            }
            init();
        }

        public function createNewAttr(attrbuteDTO:AttributeDTOImpl):void {
            newAttributeFlag = true;
            this._attrbuteDTO = attrbuteDTO;
            init();
        }

        public function get attrbuteDTO():AttributeDTOImpl {
            return _attrbuteDTO;
        }
        ]]>
	</mx:Script>

</mx:TitleWindow>