<?xml version="1.0" ?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%"
           height="100%"
           creationComplete="init();">
    <mx:Script><![CDATA[
        import com.hexagonstar.util.debug.Debug;

        import mx.core.FlexGlobals;

        import org.yes.cart.impl.CarrierDTOImpl;
        import org.yes.cart.impl.CarrierSlaDTOImpl;
        import org.yes.cart.util.CloneUtil;

        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.ListEvent;
        import mx.managers.PopUpManager;
        import mx.rpc.AsyncResponder;


        [Bindable]
        private var slaTypes:Array;

        [Bindable]
        private var carrierDTO:CarrierDTOImpl;

        [Bindable]
        private var carrierSlaDTO:CarrierSlaDTOImpl;

        private var carrierCreateEditDialog:CarrierCreateEditDialog;
        private var carrierSlaCreateEditDialog:CarrierSlaCreateEditDialog;

        /**
         * Init panel.
         * @return nothing
         */
        private function init():void {

            slaTypes = new Array();
            slaTypes[0] = new SlaType("F", resourceManager.getString('CarrierManagementPanel', 'slaTypeFixed'));
            slaTypes[1] = new SlaType("O", resourceManager.getString('CarrierManagementPanel', 'slaTypePerOrder'));
            slaTypes[2] = new SlaType("P", resourceManager.getString('CarrierManagementPanel', 'slaTypePerPackage'));
            slaTypes[3] = new SlaType("R", resourceManager.getString('CarrierManagementPanel', 'slaTypeFree'));
            slaTypes[4] = new SlaType("E", resourceManager.getString('CarrierManagementPanel', 'slaTypeExternal'));

            remoteCarrierService.getAll();
        }

        /**
         * Get type label by type.
         * @param type given type
         * @return type label
         */
        public function getSlaTypeLabel(type:String):String {
            for each (var slaType:SlaType in slaTypes) {
                if (type == slaType.data) {
                    Debug.trace(type + "=" + slaType.label);
                    return slaType.label;
                }
            }
            Debug.trace(type + "=" + type);
            return type;
        }


        /**
         * Carrier selected click handler.
         * @param event event to handle
         * @return nothing
         */
        private function handleCarrierSelectedClick(event:mx.events.ListEvent):void {
            carrierSlaDTO = null;
            carrierDTO = CarrierDTOImpl(event.currentTarget.selectedItem);
            remoteCarrierSlaService.findByCarrier(carrierDTO.carrierId);

        }

        /**
         * Cariier shipping sla selected.
         * @param event event to handle
         * @return nothing
         */
        private function handleCarrierSlaSelectedClick(event:mx.events.ListEvent):void {
            carrierSlaDTO = CarrierSlaDTOImpl(event.currentTarget.selectedItem);
        }


        /**
         * Handle new carrier event.
         * @param event event to handle
         * @return nothing
         */

        private function createNewCarrierClickHandler(event:flash.events.MouseEvent):void {

            carrierCreateEditDialog = CarrierCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), CarrierCreateEditDialog, true));
            carrierCreateEditDialog.newCarrierFlag = true;
            carrierCreateEditDialog.carrierDTOImpl = new CarrierDTOImpl();
            carrierCreateEditDialog.saveBtn.addEventListener("click", createNewCarrier);
            PopUpManager.centerPopUp(carrierCreateEditDialog);

        }

        /**
         * Perform carrier creation.
         * @return nothing
         */
        private function createNewCarrier(event:Event):void {
            remoteCarrierService.create(carrierCreateEditDialog.carrierDTOImpl).addResponder(
                    new AsyncResponder(
                            function(event:*, obj:Object = null):void {
                                carrierDTO = null;
                                carrierSlaDTO = null;
                                remoteCarrierService.getAll();
                            },
                            ShopManagerGlobal.instance.defaultFaultHandler
                            )
                    );
            PopUpManager.removePopUp(carrierCreateEditDialog);
            carrierCreateEditDialog = null;
        }


        /**
         * Handle carrier edit event.
         * @param event event to handle
         * @return nothing
         */

        private function editCarrierClickHandler(event:flash.events.MouseEvent):void {

            carrierCreateEditDialog = CarrierCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), CarrierCreateEditDialog, true));
            carrierCreateEditDialog.newCarrierFlag = false;
            carrierCreateEditDialog.carrierDTOImpl = CarrierDTOImpl(CloneUtil.clone(carrierDTO));
            carrierCreateEditDialog.saveBtn.addEventListener("click", updateCarrier);
            PopUpManager.centerPopUp(carrierCreateEditDialog);

        }

        /**
         * Update carrier information.
         * @return nothing
         */
        private function updateCarrier(event:Event):void {
            remoteCarrierService.update(carrierCreateEditDialog.carrierDTOImpl).addResponder(
                    new AsyncResponder(
                            function(event:*, obj:Object = null):void {
                                var tmpIndex:int = carrierGrid.selectedIndex;
                                remoteCarrierService.getAll().addResponder(
                                        new AsyncResponder(
                                                function(event:*, obj:Object = null):void {
                                                    carrierGrid.selectedIndex = tmpIndex;
                                                    carrierDTO = carrierGrid.dataProvider[tmpIndex];
                                                }
                                                ,
                                                ShopManagerGlobal.instance.defaultFaultHandler
                                                )
                                        );
                            }
                            ,
                            ShopManagerGlobal.instance.defaultFaultHandler
                            )

                    );
            PopUpManager.removePopUp(carrierCreateEditDialog);
        }


        /**
         * Handle carrier delete event.
         * @param event event to handle
         * @return nothing
         */

        private function deleteCarrierClickHandler(event:flash.events.MouseEvent):void {

            Alert.show(
                    resourceManager.getString('CarrierManagementPanel', 'deleteCarrierConfirm'),
                    resourceManager.getString('CarrierManagementPanel', 'warning'),
                    Alert.OK | Alert.CANCEL, this, deleteCountry, null, Alert.OK);
        }

        /**
         * Perform country delete operation.
         * @param event close event
         * @return nothing
         */
        private function deleteCountry(event:CloseEvent):void {
            if (event.detail == Alert.OK) {
                remoteCarrierService.remove(carrierDTO.carrierId).addResponder(
                        new AsyncResponder(
                                function(event:*, obj:Object = null):void {
                                    carrierDTO = null;
                                    carrierSlaDTO = null;
                                    remoteCarrierService.getAll();
                                },
                                ShopManagerGlobal.instance.defaultFaultHandler
                                )
                        );
            }
        }


        /**
         * Handle new carrier SLA event.
         * @param event event to handle
         * @return nothing
         */

        private function createNewCarrierSlaClickHandler(event:flash.events.MouseEvent):void {

            carrierSlaCreateEditDialog = CarrierSlaCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), CarrierSlaCreateEditDialog, true));
            carrierSlaCreateEditDialog.newCarrierSlaFlag = true;
            carrierSlaCreateEditDialog.carrierSlaDTOImpl = new CarrierSlaDTOImpl();
            carrierSlaCreateEditDialog.carrierSlaDTOImpl.carrierId = carrierDTO.carrierId
            carrierSlaCreateEditDialog.saveBtn.addEventListener("click", createNewCarrierSla);
            PopUpManager.centerPopUp(carrierSlaCreateEditDialog);

        }

        /**
         * Perform carrier SLA creation.
         * @return nothing
         */
        private function createNewCarrierSla(event:Event):void {
            remoteCarrierSlaService.create(carrierSlaCreateEditDialog.carrierSlaDTOImpl).addResponder(
                    new AsyncResponder(
                            function(event:*, obj:Object = null):void {
                                carrierSlaDTO = null;
                                remoteCarrierSlaService.findByCarrier(carrierDTO.carrierId);
                            },
                            ShopManagerGlobal.instance.defaultFaultHandler
                            )
                    );
            PopUpManager.removePopUp(carrierSlaCreateEditDialog);
            carrierSlaCreateEditDialog = null;
        }


        /**
         * Handle carrier edit event.
         * @param event event to handle
         * @return nothing
         */

        private function editCarrierSlaClickHandler(event:flash.events.MouseEvent):void {

            carrierSlaCreateEditDialog = CarrierSlaCreateEditDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), CarrierSlaCreateEditDialog, true));
            carrierSlaCreateEditDialog.newCarrierSlaFlag = false;
            carrierSlaCreateEditDialog.carrierSlaDTOImpl = CarrierSlaDTOImpl(CloneUtil.clone(carrierSlaDTO));
            carrierSlaCreateEditDialog.saveBtn.addEventListener("click", updateCarrierSla);
            PopUpManager.centerPopUp(carrierSlaCreateEditDialog);

        }

        /**
         * Update carrier information.
         * @return nothing
         */
        private function updateCarrierSla(event:Event):void {
            remoteCarrierSlaService.update(carrierSlaCreateEditDialog.carrierSlaDTOImpl).addResponder(
                    new AsyncResponder(
                            function(event:*, obj:Object = null):void {
                                var tmpIndex:int = carrierSlaGrid.selectedIndex;
                                remoteCarrierSlaService.findByCarrier(carrierDTO.carrierId).addResponder(
                                        new AsyncResponder(
                                                function(event:*, obj:Object = null):void {
                                                    carrierSlaGrid.selectedIndex = tmpIndex;
                                                    carrierSlaDTO = carrierSlaGrid.dataProvider[tmpIndex];
                                                }
                                                ,
                                                ShopManagerGlobal.instance.defaultFaultHandler
                                                )
                                        );
                            }
                            ,
                            ShopManagerGlobal.instance.defaultFaultHandler
                            )

                    );
            PopUpManager.removePopUp(carrierSlaCreateEditDialog);
            carrierSlaCreateEditDialog = null;
        }
        ]]></mx:Script>


    <mx:RemoteObject showBusyCursor="true" id="remoteCarrierService"
                     destination="remoteCarrierService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>

    <mx:RemoteObject showBusyCursor="true" id="remoteCarrierSlaService"
                     destination="remoteCarrierSlaService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>

    <mx:VDividedBox height="100%" width="100%">
        <mx:Panel width="100%" title="@Resource(bundle='CarrierManagementPanel',key='carriers')">
            <mx:ControlBar>
                <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='newCarrier')"
                           toolTip="@Resource(bundle='CarrierManagementPanel',key='newCarrierHint')"
                           click="createNewCarrierClickHandler(event)"

                        />
                <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='editCarrier')"
                           toolTip="@Resource(bundle='CarrierManagementPanel',key='editCarrierHint')"
                           enabled="{carrierDTO != null}"
                           click="editCarrierClickHandler(event)"
                        />
                <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='deleteCarrier')"
                           toolTip="@Resource(bundle='CarrierManagementPanel',key='deleteCarrierHint')"
                           enabled="{carrierDTO != null &amp;&amp; remoteCarrierSlaService.findByCarrier.lastResult.length == 0}"
                           click="deleteCarrierClickHandler(event)"

                        />
            </mx:ControlBar>
            <mx:DataGrid id="carrierGrid"
                         dataProvider="{remoteCarrierService.getAll.lastResult}"
                         itemClick="handleCarrierSelectedClick(event)"
                         width="100%" height="100%">
                <mx:columns>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='carrierId')"
                                       dataField="carrierId"/>
                    <mx:DataGridColumn width="300"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='name')"
                                       dataField="name"/>
                    <mx:DataGridColumn
                            headerText="@Resource(bundle='CarrierManagementPanel',key='worldwide')"
                            dataField="worldwide">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox paddingLeft="40" enabled="false" selected="{data.worldwide}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn
                            headerText="@Resource(bundle='CarrierManagementPanel',key='country')"
                            dataField="country">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox paddingLeft="40" enabled="false" selected="{data.country}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>

                    <mx:DataGridColumn
                            headerText="@Resource(bundle='CarrierManagementPanel',key='state')"
                            dataField="state">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox paddingLeft="40" enabled="false" selected="{data.state}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>

                    <mx:DataGridColumn
                            headerText="@Resource(bundle='CarrierManagementPanel',key='local')"
                            dataField="local">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:CheckBox paddingLeft="40" enabled="false" selected="{data.local}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>

                    <mx:DataGridColumn
                            headerText="@Resource(bundle='CarrierManagementPanel',key='description')"
                            dataField="description"/>
                </mx:columns>
                <!--countries dg-->
            </mx:DataGrid>
        </mx:Panel>
        <mx:Panel width="100%" title="@Resource(bundle='CarrierManagementPanel',key='carrierSLA')"
                  visible="{carrierDTO != null}">
            <mx:ControlBar>
                <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='newCarrierSla')"
                           toolTip="@Resource(bundle='CarrierManagementPanel',key='newCarrierSlaHint')"
                           enabled="{carrierDTO != null}"
                           click="createNewCarrierSlaClickHandler(event)"
                        />
                <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='editCarrierSla')"
                           toolTip="@Resource(bundle='CarrierManagementPanel',key='editCarrierSlaHint')"
                           enabled="{carrierSlaDTO != null}"
                           click="editCarrierSlaClickHandler(event)"
                        />
                <mx:Button label="@Resource(bundle='CarrierManagementPanel',key='deleteCarrierSla')"
                           toolTip="@Resource(bundle='CarrierManagementPanel',key='deleteCarrieSlarHint')"
                           enabled="{carrierSlaDTO != null}"
                           click="deleteCarrierClickHandler(event)"
                        />
            </mx:ControlBar>
            <mx:DataGrid id="carrierSlaGrid"
                         dataProvider="{remoteCarrierSlaService.findByCarrier.lastResult}"
                         itemClick="handleCarrierSlaSelectedClick(event)"
                         width="100%" height="100%">
                <mx:columns>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='carrierslaId')"
                                       dataField="carrierslaId"/>
                    <mx:DataGridColumn width="250"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='name')"
                                       dataField="name"/>

                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='maxDays')"
                                       dataField="maxDays"/>

                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='currency')"
                                       dataField="currency"/>
                    <mx:DataGridColumn width="100"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='slaType')"
                                       dataField="slaType">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{outerDocument.getSlaTypeLabel(data.slaType)}"/>
                            </mx:Component>
                        </mx:itemRenderer>



                                       </mx:DataGridColumn>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='price')"
                                       dataField="price">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{data.price == 0?'':data.price}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='priceNotLess')"
                                       dataField="priceNotLess">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{data.priceNotLess == 0?'':data.priceNotLess}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='percent')"
                                       dataField="percent">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{data.percent == 0?'':data.percent}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='percentNotLess')"
                                       dataField="percentNotLess">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{data.percentNotLess == 0?'':data.percentNotLess}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                    <mx:DataGridColumn width="80"
                                       headerText="@Resource(bundle='CarrierManagementPanel',key='costNotLess')"
                                       dataField="costNotLess">
                        <mx:itemRenderer>
                            <mx:Component>
                                <mx:Label text="{data.costNotLess == 0?'':data.costNotLess}"/>
                            </mx:Component>
                        </mx:itemRenderer>
                    </mx:DataGridColumn>
                </mx:columns>
            </mx:DataGrid>

        </mx:Panel>
    </mx:VDividedBox>


</mx:Canvas>