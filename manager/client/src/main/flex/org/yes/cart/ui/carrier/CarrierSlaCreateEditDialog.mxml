<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
                creationComplete="init()"
                creationCompleteEffect="Zoom"
                title="Create carrier sla"
                showCloseButton="true"
                close="PopUpManager.removePopUp(this)">


    <mx:RemoteObject showBusyCursor="true" id="remoteShopService"
                     destination="remoteShopService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>


    <mx:Form>
        <mx:FormItem width="100%" label="@Resource(bundle='CarrierManagementPanel',key='name')">
            <mx:TextInput width="180" id="cname"/>
        </mx:FormItem>
        <mx:FormItem width="100%" label="@Resource(bundle='CarrierManagementPanel',key='description')">
            <mx:TextArea width="180" id="description"/>
        </mx:FormItem>
        <mx:FormItem width="100%" label="@Resource(bundle='CarrierManagementPanel',key='maxDays')">
            <mx:TextInput width="180" id="maxDays"/>
        </mx:FormItem>

        <mx:FormItem width="100%" label="@Resource(bundle='CarrierManagementPanel',key='currency')">
            <mx:ComboBox id="currencyComboBox"
                         change="currencyChangeEvt(event)"
                         prompt="@Resource(bundle='CarrierManagementPanel',key='selectCurrency')"
                         width="180"
                         dataProvider="{remoteShopService.getAllSupportedCurrenciesByShops.lastResult}"/>
        </mx:FormItem>

        <mx:FormItem width="100%" label="@Resource(bundle='CarrierManagementPanel',key='slaType')">
            <mx:ComboBox id="slaTypeComboBox"
                         change="slaTypeChangeEvt(event)"
                         prompt="@Resource(bundle='CarrierManagementPanel',key='selectSlaType')"
                         width="180"
                         dataProvider="{slaTypes}"
                    />
        </mx:FormItem>

        <mx:FormItem id="scriptFormItem" width="100%"
                     label="@Resource(bundle='CarrierManagementPanel',key='script')"
                     toolTip="@Resource(bundle='CarrierManagementPanel',key='scriptHint')"
                >
            <mx:TextInput width="180" id="script"
                          toolTip="@Resource(bundle='CarrierManagementPanel',key='scriptHint')"/>
        </mx:FormItem>

        <mx:FormItem id="priceFormItem" width="100%" label="@Resource(bundle='CarrierManagementPanel',key='price')">
            <mx:TextInput width="180" id="price"/>
            <mx:Button id="priceBtn"
                       label="@Resource(bundle='CarrierManagementPanel',key='priceMatrix')"
                       toolTip="@Resource(bundle='CarrierManagementPanel',key='priceMatrixHint')"
                       width="160" click="editPriceMatrix(event)"/>

        </mx:FormItem>

        <mx:FormItem id="priceNotLessFormItem" width="100%"
                     label="@Resource(bundle='CarrierManagementPanel',key='priceNotLess')">
            <mx:TextInput width="180" id="priceNotLess"/>
        </mx:FormItem>

        <mx:FormItem id="percentFormItem" width="100%" label="@Resource(bundle='CarrierManagementPanel',key='percent')">
            <mx:TextInput width="180" id="percent"/>
        </mx:FormItem>

        <mx:FormItem id="percentNotLessFormItem" width="100%"
                     label="@Resource(bundle='CarrierManagementPanel',key='percentNotLess')">
            <mx:TextInput width="180" id="percentNotLess"/>
        </mx:FormItem>

        <mx:FormItem id="costNotLessFormItem" width="100%"
                     label="@Resource(bundle='CarrierManagementPanel',key='costNotLess')">
            <mx:TextInput width="180" id="costNotLess"/>
        </mx:FormItem>

    </mx:Form>
    <mx:ControlBar horizontalAlign="right">
        <mx:Button id="saveBtn" label="@Resource(bundle='ShopManagerApplication',key='save')" width="94" click="updateModel(event)"/>
        <mx:Button id="closeBtn" label="@Resource(bundle='ShopManagerApplication',key='close')"
                   click="PopUpManager.removePopUp(this)" width="94"/>
    </mx:ControlBar>


    <mx:Script><![CDATA[
        import org.yes.cart.impl.CarrierSlaDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import flash.events.MouseEvent;

        import mx.binding.utils.BindingUtils;
        import mx.controls.Alert;
        import mx.managers.PopUpManager;
        import mx.rpc.AsyncResponder;
        import mx.utils.StringUtil;

        public var newCarrierSlaFlag:Boolean;
        private var _carrierSlaDTOImpl:CarrierSlaDTOImpl;
        [Bindable]
        private var slaTypes:Array;

        public function get carrierSlaDTOImpl():CarrierSlaDTOImpl {
            return _carrierSlaDTOImpl;
        }

        public function set carrierSlaDTOImpl(value:CarrierSlaDTOImpl):void {
            _carrierSlaDTOImpl = value;
        }


        private function init():void {
            slaTypes = new Array();
            slaTypes[0] = new SlaType("F", resourceManager.getString('CarrierManagementPanel', 'slaTypeFixed'));
            slaTypes[1] = new SlaType("O", resourceManager.getString('CarrierManagementPanel', 'slaTypePerOrder'));
            slaTypes[2] = new SlaType("P", resourceManager.getString('CarrierManagementPanel', 'slaTypePerPackage'));
            slaTypes[3] = new SlaType("R", resourceManager.getString('CarrierManagementPanel', 'slaTypeFree'));
            slaTypes[4] = new SlaType("E", resourceManager.getString('CarrierManagementPanel', 'slaTypeExternal'));

            remoteShopService.getAllSupportedCurrenciesByShops().addResponder(
                    new AsyncResponder(
                            function(event:*, obj:Object = null):void {
                                currencyComboBox.selectedItem = _carrierSlaDTOImpl.currency;
                            }
                            ,
                            ShopManagerGlobal.instance.defaultFaultHandler
                            )

                    );


            if (newCarrierSlaFlag) {
                this.title = resourceManager.getString('CarrierManagementPanel', 'newCarrierSlaDialogTitle');
                saveBtn.label = resourceManager.getString('CarrierManagementPanel', 'create');
            } else {
                this.title = resourceManager.getString('CarrierManagementPanel', 'editCarrierSlaDialogTitle');
                saveBtn.label = resourceManager.getString('CarrierManagementPanel', 'update');


                for each (var slaType:SlaType in slaTypeComboBox.dataProvider) {
                    if (slaType.data == _carrierSlaDTOImpl.slaType) {
                        slaTypeComboBox.selectedItem = slaType;
                        break;
                    }
                }
            }

            BindingUtils.bindProperty(this.cname, "text", _carrierSlaDTOImpl, "name");
            BindingUtils.bindProperty(this.description, "text", _carrierSlaDTOImpl, "description");
            BindingUtils.bindProperty(this.script, "text", _carrierSlaDTOImpl, "script");
            BindingUtils.bindProperty(this.maxDays, "text", _carrierSlaDTOImpl, "maxDays");

            BindingUtils.bindProperty(_carrierSlaDTOImpl, "name", this.cname, "text");
            BindingUtils.bindProperty(_carrierSlaDTOImpl, "description", this.description, "text");
            BindingUtils.bindProperty(_carrierSlaDTOImpl, "script", this.script, "text");
            BindingUtils.bindProperty(_carrierSlaDTOImpl, "maxDays", this.maxDays, "text");

            if (!isNaN(_carrierSlaDTOImpl.price) && (_carrierSlaDTOImpl.price > 0)) {
                this.price.text = _carrierSlaDTOImpl.price.toString();
            }
            if (!isNaN(_carrierSlaDTOImpl.percent) && (_carrierSlaDTOImpl.percent > 0)) {
                this.percent.text = _carrierSlaDTOImpl.percent.toString();
            }
            if (!isNaN(_carrierSlaDTOImpl.priceNotLess) && (_carrierSlaDTOImpl.priceNotLess > 0)) {
                this.priceNotLess.text = _carrierSlaDTOImpl.priceNotLess.toString();
            }
            if (!isNaN(_carrierSlaDTOImpl.percentNotLess) && (_carrierSlaDTOImpl.percentNotLess > 0)) {
                this.percentNotLess.text = _carrierSlaDTOImpl.percentNotLess.toString();
            }
            if (!isNaN(_carrierSlaDTOImpl.costNotLess) && (_carrierSlaDTOImpl.costNotLess > 0)) {
                this.costNotLess.text = _carrierSlaDTOImpl.costNotLess.toString();
            }
            changeControlsVisibility(_carrierSlaDTOImpl.slaType);


        }

        /**
         * Update model.
         * @param event save click event
         * @return nothing
         */
        private function updateModel(event:MouseEvent):void {


            if ("F" == _carrierSlaDTOImpl.slaType) { // fixed
                this.costNotLess.text = this.percentNotLess.text = this.priceNotLess.text = this.percent.text = "0";
            } else if ("O" == _carrierSlaDTOImpl.slaType) { // per order
                this.price.text = "0";
            } else if ("P" == _carrierSlaDTOImpl.slaType) { // per package
                this.price.text = "0";
            } else if ("R" == _carrierSlaDTOImpl.slaType) { // free
                this.price.text = this.costNotLess.text = this.percentNotLess.text = this.priceNotLess.text = this.percent.text = "0";
            } else if ("E" == _carrierSlaDTOImpl.slaType) { //external
                this.price.text = this.costNotLess.text = this.percentNotLess.text = this.priceNotLess.text = this.percent.text = "0";
            }

            if (!isBlank(this.price.text)) {
                _carrierSlaDTOImpl.price = new Number(this.price.text);
            }
            if (!isBlank(this.percent.text)) {
                _carrierSlaDTOImpl.percent = new Number(this.percent.text);
            }
            if (!isBlank(this.priceNotLess.text)) {
                _carrierSlaDTOImpl.priceNotLess = new Number(this.priceNotLess.text);
            }
            if (!isBlank(this.percentNotLess.text)) {
                _carrierSlaDTOImpl.percentNotLess = new Number(this.percentNotLess.text);
            }
            if (!isBlank(this.costNotLess.text)) {
                _carrierSlaDTOImpl.costNotLess = new Number(this.costNotLess.text);
            }
            _carrierSlaDTOImpl.currency = String(currencyComboBox.selectedItem);
            _carrierSlaDTOImpl.slaType = SlaType(slaTypeComboBox.selectedItem).data;

        }


        /**
         * Is given string blank. TODO move to util
         * @param str string to check
         * @return true in case if given string is blanks
         */
        public static function isBlank(str:String):Boolean {
            return (str == null || StringUtil.trim(str).length == 0);
        }

        /**
         * Sla type is changed
         * @param event
         * @return
         */
        private function slaTypeChangeEvt(event:Event):void {
            _carrierSlaDTOImpl.slaType = SlaType(event.currentTarget.selectedItem).data;
            changeControlsVisibility(_carrierSlaDTOImpl.slaType);
        }

        /**
         * Handle currency change event
         * @param event event
         * @return nothing
         */
        private function currencyChangeEvt(event:Event):void {
            _carrierSlaDTOImpl.currency = event.currentTarget.selectedItem;

        }


        /**
         * Change the conponent visibility, depends from sla type
         * @param slaType sla type
         * @return nothing
         */
        private function changeControlsVisibility(slaType:String):void {

            scriptFormItem.includeInLayout = scriptFormItem.visible = false;
            priceFormItem.includeInLayout = priceFormItem.visible = false;
            priceNotLessFormItem.includeInLayout = priceNotLessFormItem.visible = false;
            percentFormItem.includeInLayout = percentFormItem.visible = false;
            percentNotLessFormItem.includeInLayout = percentNotLessFormItem.visible = false;
            costNotLessFormItem.includeInLayout = costNotLessFormItem.visible = false;


            if ("F" == slaType) { // fixed
                priceFormItem.includeInLayout = priceFormItem.visible = true;
                price.includeInLayout = price.visible = true;
                priceBtn.includeInLayout = priceBtn.visible = false;
            } else if ("O" == slaType) { // per order
                priceFormItem.includeInLayout = priceFormItem.visible = true;
                price.includeInLayout = price.visible = false;
                priceBtn.includeInLayout = priceBtn.visible = true;
                priceNotLessFormItem.includeInLayout = priceNotLessFormItem.visible = true;
                percentFormItem.includeInLayout = percentFormItem.visible = true;
                percentNotLessFormItem.includeInLayout = percentNotLessFormItem.visible = true;
                costNotLessFormItem.includeInLayout = costNotLessFormItem.visible = true;
            } else if ("P" == slaType) { // per package
                priceFormItem.includeInLayout = priceFormItem.visible = true;
                price.includeInLayout = price.visible = false;
                priceBtn.includeInLayout = priceBtn.visible = true;
                priceNotLessFormItem.includeInLayout = priceNotLessFormItem.visible = true;
                percentFormItem.includeInLayout = percentFormItem.visible = true;
                percentNotLessFormItem.includeInLayout = percentNotLessFormItem.visible = true;
                costNotLessFormItem.includeInLayout = costNotLessFormItem.visible = true;
            } else if ("R" == slaType) { // free

            } else if ("E" == slaType) { //external
                scriptFormItem.includeInLayout = scriptFormItem.visible = true;
            }
        }


        /**
         * Create dialog to edit distance - weight and distanse-volume matrix to price determination.
         * @param event event
         * @return nothing
         */
        private function editPriceMatrix(event:MouseEvent):void {
            Alert.show(
                    resourceManager.getString('CarrierManagementPanel', 'notImplemented'),
                    resourceManager.getString('CarrierManagementPanel', 'warning')
                    ); //TODO

        }
        ]]>
    </mx:Script>
</mx:TitleWindow>