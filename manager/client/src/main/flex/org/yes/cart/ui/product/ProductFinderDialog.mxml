<!--
  - Copyright 2009 Igor Azarnyi, Denys Pavlov
  -
  -    Licensed under the Apache License, Version 2.0 (the "License");
  -    you may not use this file except in compliance with the License.
  -    You may obtain a copy of the License at
  -
  -        http://www.apache.org/licenses/LICENSE-2.0
  -
  -    Unless required by applicable law or agreed to in writing, software
  -    distributed under the License is distributed on an "AS IS" BASIS,
  -    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  -    See the License for the specific language governing permissions and
  -    limitations under the License.
  -->

<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="780" height="500"
                title="@Resource(bundle='ProductManagementPanel',key='find')"
                showCloseButton="true"
                close="PopUpManager.removePopUp(this)"
                creationComplete="init();"
        >


    <mx:Script>
		<![CDATA[
        // TODO see http://192.150.8.60/devnet/flex/articles/file_upload_02.html to show images

        import mx.rpc.events.FaultEvent;
        import mx.rpc.events.ResultEvent;

        import org.yes.cart.impl.BrandDTOImpl;
        import org.yes.cart.impl.ProductTypeDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;

        import mx.events.ListEvent;
        import mx.managers.PopUpManager;

        public function get productSelection():Array {
            return productGrid.selectedItems;
        }

        public function init():void {
            remoteBrandService.getAll();
            remoteProductTypeService.getAll();
        }

        private function onProductSelected(event:ListEvent):void {
            var arr:Array = productGrid.selectedItems;
            hasSelection = arr != null && arr.length > 0;
        }


        /**
         * Performs search operation.
         * @param event event
         * @return nothing
         */
        private function onSearchBtnClick(event:MouseEvent):void {

            var selectedBrandId:Number = 0;
            var selectedTypeId:Number = 0;

            var selectedBrand:BrandDTOImpl = BrandDTOImpl(brandComboBox.selectedItem);

            var selectedType:ProductTypeDTOImpl = ProductTypeDTOImpl(typeComboBox.selectedItem);

            if (selectedBrand != null) {
                selectedBrandId = selectedBrand.brandId;
            }

            if (selectedType != null) {
                selectedTypeId = selectedType.producttypeId;
            }

            hasSelection = false;

            remoteProductService.getProductByCodeNameBrandType(
                    codeTextInput.text,
                    nameTextInput.text,
                    selectedBrandId,
                    selectedTypeId);

        }

        protected function onRpcMethodFault(event:FaultEvent):void {
            ShopManagerGlobal.instance.defaultOnRpcMethodFault(event);
        }

        private function onGetAllBrandsResult(event:ResultEvent):void {
            brandComboBox.dataProvider = event.result;
            brandComboBox.selectedItem = null;
            brandComboBox.selectedIndex = -1;
        }

        private function onGetAllProductTypesResult(event:ResultEvent):void {
            typeComboBox.dataProvider = event.result;
            typeComboBox.selectedItem = null;
            typeComboBox.selectedIndex = -1;
        }

        private function onGetProductByCodeNameBrandTypeResult(event:ResultEvent):void {
            productGrid.dataProvider = event.result;
        }
        ]]>
	</mx:Script>

    <mx:Boolean id="hasSelection">false</mx:Boolean>


    <mx:RemoteObject showBusyCursor="true" id="remoteBrandService" destination="remoteBrandService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getAllBrands" name="getAll"
                   result="onGetAllBrandsResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>

    <mx:RemoteObject showBusyCursor="true" id="remoteProductTypeService" destination="remoteProductTypeService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getAllProductTypes" name="getAll"
                   result="onGetAllProductTypesResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>


    <mx:RemoteObject showBusyCursor="true" id="remoteProductService" destination="remoteProductService"
                     channelSet="{ShopManagerGlobal.instance.channelSet}">

        <mx:method id="getProductByCodeNameBrandType" name="getProductByCodeNameBrandType"
                   result="onGetProductByCodeNameBrandTypeResult(event)"
                   fault="onRpcMethodFault(event)"/>

    </mx:RemoteObject>


    <mx:VBox width="100%" height="100%"
            paddingLeft="2" paddingRight="2" paddingBottom="2" paddingTop="2">
        <mx:HBox paddingTop="5" width="100%">
            <mx:Label text="@Resource(bundle='ProductManagementPanel',key='code')"/>
            <mx:TextInput id="codeTextInput" width="100"/>
            <mx:Label text="@Resource(bundle='ProductManagementPanel',key='name')"/>
            <mx:TextInput id="nameTextInput" width="100"/>
            <mx:Label text="@Resource(bundle='ProductManagementPanel',key='brand')"/>
            <mx:ComboBox id="brandComboBox" width="120"
                         labelField="name"
                         data="brandId"
                         prompt="@Resource(bundle='ProductManagementPanel',key='selectBrandPropmt')"
                    />
            <mx:Label text="@Resource(bundle='ProductManagementPanel',key='type')"/>
            <mx:ComboBox id="typeComboBox" width="120"
                         labelField="name"
                         data="producttypeId"
                         prompt="@Resource(bundle='ProductManagementPanel',key='selectTypePropmt')"
                    />
            <mx:Button label="@Resource(bundle='ProductManagementPanel',key='findBtn')"
                       click="onSearchBtnClick(event)"/>
        </mx:HBox>
        <mx:DataGrid id="productGrid" width="100%" height="100%"
                     allowMultipleSelection="true"
                     itemClick="onProductSelected(event)">
            <mx:columns>
                <mx:DataGridColumn width="50" headerText="@Resource(bundle='ProductManagementPanel',key='id')"
                                   dataField="productId"/>
                <mx:DataGridColumn width="120" headerText="@Resource(bundle='ProductManagementPanel',key='code')"
                                   dataField="code"/>
                <mx:DataGridColumn headerText="@Resource(bundle='ProductManagementPanel',key='name')" dataField="name"/>
            </mx:columns>
        </mx:DataGrid>
        <mx:ControlBar width="100%" horizontalAlign="right">
            <mx:Button id="selectProductButton" label="@Resource(bundle='ProductManagementPanel',key='select')"
                       enabled="{hasSelection}"/>
            <mx:Button label="@Resource(bundle='ShopManagerApplication',key='close')"
                       click="PopUpManager.removePopUp(this)"/>
        </mx:ControlBar>
    </mx:VBox>


</mx:TitleWindow>