<?xml version="1.0" ?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="init();">
    <mx:VBox width="100%" height="100%">
        <mx:Form x="0" y="0">
            <mx:FormItem>
                <mx:HBox>
                    <mx:Button id="addProductCategoryBtn"
                               label="@Resource(bundle='ProductManagmentPanel',key='addProductCategory')"
                               toolTip="@Resource(bundle='ProductManagmentPanel',key='addProductCategoryHint')"
                               enabled="true"
                               click="addProductCategory(event);"
                            />
                    <mx:Button id="deleteProductCategoryBtn"
                               label="@Resource(bundle='ProductManagmentPanel',key='deleteProductCategory')"
                               toolTip="@Resource(bundle='ProductManagmentPanel',key='deleteProductCategoryHint')"
                               enabled="{selectedCategoryDTO != null}"
                               click="deleteProductCategory(event);"
                            />
                </mx:HBox>
            </mx:FormItem>
        </mx:Form>
        <mx:DataGrid
                id="ProductCategoriesGrid"
                x="0" y="0" width="100%" height="100%" editable="false"
                dataProvider="{remoteCategoryService.getByProductId.lastResult}"
                itemClick="productCategorySelectedClick(event);"
                >
            <mx:columns>
                <mx:DataGridColumn width="50" headerText="@Resource(bundle='ProductManagmentPanel',key='id')"
                                   dataField="categoryId"/>
                <mx:DataGridColumn width="200" headerText="@Resource(bundle='ProductManagmentPanel',key='category')"
                                   dataField="name"/>
                <mx:DataGridColumn headerText="@Resource(bundle='ProductManagmentPanel',key='description')"
                                   dataField="description"/>
            </mx:columns>
        </mx:DataGrid>
    </mx:VBox>

    <mx:RemoteObject showBusyCursor="true" makeObjectsBindable="true"
                     id="remoteCategoryService"
                     destination="remoteCategoryService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>

    <mx:RemoteObject showBusyCursor="true" makeObjectsBindable="true"
                     id="remoteProductCategoryService"
                     destination="remoteProductCategoryService"
                     result="ShopManagerGlobal.instance.defaultResultHandler(event)"
                     fault="ShopManagerGlobal.instance.defaultFaultHandler(event)"
                     channelSet="{ShopManagerGlobal.instance.channelSet}"/>


    <mx:Script><![CDATA[
        import mx.core.FlexGlobals;

        import org.yes.cart.impl.CategoryDTOImpl;
        import org.yes.cart.impl.ProductCategoryDTOImpl;
        import org.yes.cart.shopmanager.ShopManagerGlobal;
        import org.yes.cart.ui.category.CategoryFinderDialog;

        import mx.controls.Alert;
        import mx.events.CloseEvent;
        import mx.events.ListEvent;
        import mx.managers.PopUpManager;
        import mx.rpc.AsyncResponder;
        import mx.rpc.events.ResultEvent;

        public var productId:Number;

        [Bindable]
        private var selectedCategoryDTO:CategoryDTOImpl;

        private var categoryFinderPopUp:CategoryFinderDialog;


        private function init():void {
            readCategories(null, null);
        }

        private function readCategories(event:ResultEvent, ojb:Object = null):void {
            remoteCategoryService.getByProductId(productId);
        }

        /**
         * Product category item selected in grid.
         * @param event event
         * @return nothing
         */
        private function productCategorySelectedClick(event:ListEvent):void {
            selectedCategoryDTO = event.currentTarget.selectedItem;
        }


        private function deleteProductCategory(event:MouseEvent):void {
            Alert.show(
                    resourceManager.getString('ProductManagmentPanel', 'deleteProductFromCategoryConfirm'),
                    resourceManager.getString('ProductManagmentPanel', 'warning'),
                    Alert.OK | Alert.CANCEL, this, deleteProductCategoryServiceCall, null, Alert.OK);

        }

        private function deleteProductCategoryServiceCall(event:CloseEvent):void {
            if (event.detail == Alert.OK) {
                remoteProductCategoryService.removeByCategoryProductIds(
                        selectedCategoryDTO.categoryId, productId).addResponder(
                        new AsyncResponder(
                                readCategories,
                                ShopManagerGlobal.instance.defaultFaultHandler
                                )
                        );
                selectedCategoryDTO = null;
            }
        }

        private function addProductCategory(event:MouseEvent):void {
            categoryFinderPopUp = CategoryFinderDialog(PopUpManager.createPopUp(DisplayObject(FlexGlobals.topLevelApplication), CategoryFinderDialog, true));
            categoryFinderPopUp.selectProductButton.addEventListener("click", assignSelectedProduct);
            PopUpManager.centerPopUp(categoryFinderPopUp);

        }

        /**
         * Handle selected category from finder dialog and assign current product to selected category.
         * @param event event
         * @return nothing
         */
        private function assignSelectedProduct(event:Event):void {
            var productCategoryDTOImpl:ProductCategoryDTOImpl = new ProductCategoryDTOImpl();
            productCategoryDTOImpl.productId = productId;
            productCategoryDTOImpl.categoryId = categoryFinderPopUp.selectedCategoryDTOImpl.categoryId;
            productCategoryDTOImpl.rank = 0;

            remoteProductCategoryService.create(productCategoryDTOImpl).addResponder(
                    new AsyncResponder(
                            readCategories,
                            ShopManagerGlobal.instance.defaultFaultHandler));

            PopUpManager.removePopUp(categoryFinderPopUp);

        }
        ]]></mx:Script>
</mx:Canvas>