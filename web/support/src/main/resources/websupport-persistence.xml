<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Igor Azarnyi, Denys Pavlov
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.1.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd
           http://cxf.apache.org/jaxws
           http://cxf.apache.org/schemas/jaxws.xsd
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache.xsd">


    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          autowire="byName"><!-- add if using 2nd lvl cache: depends-on="hibernateCacheManagerProvider" -->
        <!--
            YC-315 investigation showed that we should not use 2nd level cache as it created adverse
            effect on performance by splitting selects into N + 1 selects in order to manage cache
            for joined objects.
            It seems like we never use objects by PK and hence YC does not benefit from 2nd level cache
         -->
        <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"/>-->
        <property name="mappingResources">
            <list>
                <value>hibernate/yc.xml</value>
            </list>
        </property>
        <property name="entityInterceptor">
            <bean class="org.yes.cart.domain.interceptor.StorefrontInterceptor"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.search.default.indexBase">
                    #{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart'}
                </prop>
                <prop key="hibernate.search.worker.execution">async</prop>
                <prop key="hibernate.search.worker.thread_pool.size">10</prop>
                <prop key="hibernate.search.default.exclusive_index_use">false</prop>
            </props>
        </property>
    </bean>


</beans>