<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/security 
           http://www.springframework.org/schema/security/spring-security-2.0.xsd
           http://www.springframework.org/schema/lang 
           http://www.springframework.org/schema/lang/spring-lang-2.5.xsd">


    <context:component-scan base-package="org.yes.cart"/>

    <aop:aspectj-autoproxy/>



    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          autowire="byName">
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="mappingResources">
            <list>
                <value>npa.xml</value>
            </list>
        </property>
        <property name="entityInterceptor">
            <bean class="org.yes.cart.payment.persistence.service.impl.AuditInterceptor"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.search.default.indexBase">#{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart'}</prop>
            </props>
        </property>
    </bean>


    <import resource="classpath*:core-config.xml"/>

    <import resource="modules.xml"/>


    <bean id="applicationDirector" class="org.yes.cart.web.application.ApplicationDirector">
        <constructor-arg index="0" ref="shopService"/>
    </bean>

    <!-- ################################### filter delegates begin ################################### -->
    <bean id="shopResolverFilter" class="org.yes.cart.web.filter.ShopResolverFilter">
        <constructor-arg index="0" ref="applicationDirector"/>
        <constructor-arg index="1" ref="systemService"/>
        <constructor-arg index="2" ref="languageService"/>
    </bean>

    <bean id="imageFilter" class="org.yes.cart.web.filter.ImageFilter">
        <constructor-arg index="0" ref="applicationDirector"/>
        <constructor-arg index="1" ref="imageService"/>
        <constructor-arg index="2" ref="systemService"/>
    </bean>

    <bean id="shoppingCartFilter" class="org.yes.cart.web.filter.ShoppingCartFilter">
        <constructor-arg index="0" ref="applicationDirector"/>
        <constructor-arg index="1" ref="cookieTuplizer"/>
        <constructor-arg index="2" ref="amountCalculationStrategy"/>
    </bean>

    <!--CPOINT do you reaaly need paypal express checkout ?-->
    <bean id="payPalExpressCheckoutFilter" class="org.yes.cart.web.filter.PayPalExpressCheckoutFilter">
        <constructor-arg index="0" ref="applicationDirector"/>
        <constructor-arg index="1" ref="paymentModulesManager"/>
        <constructor-arg index="2" ref="paymentProcessor"/>
        <constructor-arg index="3" ref="customerOrderService"/>
    </bean>

    <!-- ################################### filter delegates end ################################### -->

    <bean id="cookieTuplizer" class="org.yes.cart.web.support.util.cookie.impl.CookieTuplizerImpl"
          scope="prototype">  <!-- at lease one read , second write-->
        <constructor-arg index="0" value="CHANGE_PASSWORD_ON_PRODUCTION"/>
        <constructor-arg index="1" value="2048"/>
        <constructor-arg index="2" value="DES"/>
        <constructor-arg index="3" value="DES/ECB/PKCS5Padding"/>
    </bean>

    <bean id="amountCalculationStrategy" class="org.yes.cart.shoppingcart.impl.DefaultAmountCalculationStrategy">  <!-- CPOINT tax and amount calculation strategy -->
                <constructor-arg index="0"  value="20.00"/>
    </bean>



    <bean id="shoppingCartPersister" class="org.yes.cart.web.support.util.cookie.impl.ShoppingCartPersisterImpl">
        <constructor-arg index="0" ref="cookieTuplizer"/>
    </bean>

    <bean id="languageService" class="org.yes.cart.web.support.service.impl.LanguageServiceImpl">
        <constructor-arg index="0">
            <map>
                <entry key="en" value="English"/>
                <entry key="ru" value="&#x0420;&#x0443;&#x0441;&#x0441;&#x043a;&#x0438;&#x0439;"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="centralViewResolver" class="org.yes.cart.web.support.service.impl.CentralViewResolverImpl">
        <constructor-arg index="0" ref="categoryService"/>
        <constructor-arg index="1" ref="attributeService"/>
        <constructor-arg index="2" ref="luceneQueryFactory"/>
    </bean>


    <bean id="currencySymbolService" class="org.yes.cart.web.support.service.impl.CurrencySymbolServiceImpl">
        <constructor-arg index="0">
            <map>
                <entry key="ALL" value="&#x4c;&#x65;&#x6b;"/>
                <entry key="AFN" value="&#x60b;"/>
                <entry key="ANG" value="&#x192;"/>
                <entry key="ARS" value="&#x24;"/>
                <entry key="AUD" value="&#x24;"/>
                <entry key="AWG" value="&#x192;"/>
                <entry key="AZN" value="&#x43c;&#x430;&#x43d;"/>
                <entry key="BAM" value="&#x4b;&#x4d;"/>
                <entry key="BBD" value="&#x24;"/>
                <entry key="BGN" value="&#x43b;&#x432;"/>
                <entry key="BND" value="&#x24;"/>
                <entry key="BOB" value="&#x24;&#x62;"/>
                <entry key="BRL" value="&#x52;&#x24;"/>
                <entry key="BSD" value="&#x24;"/>
                <entry key="BWP" value="&#x50;"/>
                <entry key="BYR" value="&#x70;&#x2e;"/>
                <entry key="BZD" value="&#x42;&#x5a;&#x24;"/>
                <entry key="CAD" value="&#x24;"/>
                <entry key="CHF" value="&#x43;&#x48;&#x46;"/>
                <entry key="CLP" value="&#x24;"/>
                <entry key="CNY" value="&#xa5;"/>
                <entry key="COP" value="&#x24;"/>
                <entry key="CRC" value="&#x20a1;"/>
                <entry key="CUP" value="&#x20b1;"/>
                <entry key="CZK" value="&#x4b;&#x10d;"/>
                <entry key="DKK" value="&#x6b;&#x72;"/>
                <entry key="DOP" value="&#x52;&#x44;&#x24;"/>
                <entry key="EEK" value="&#x6b;&#x72;"/>
                <entry key="EGP" value="&#xa3;"/>
                <entry key="EUR" value="&#x20ac;"/>
                <entry key="FJD" value="&#x24;"/>
                <entry key="FKP" value="&#xa3;"/>
                <entry key="GBP" value="&#xa3;"/>
                <entry key="GGP" value="&#xa3;"/>
                <entry key="GHC" value="&#xa2;"/>
                <entry key="GIP" value="&#xa3;"/>
                <entry key="GTQ" value="&#x51;"/>
                <entry key="GYD" value="&#x24;"/>
                <entry key="HKD" value="&#x24;"/>
                <entry key="HNL" value="&#x4c;"/>
                <entry key="HRK" value="&#x6b;&#x6e;"/>
                <entry key="HUF" value="&#x46;&#x74;"/>
                <entry key="IDR" value="&#x52;&#x70;"/>
                <entry key="ILS" value="&#x20aa;"/>
                <entry key="IMP" value="&#xa3;"/>
                <entry key="INR" value="&#x20a8;"/>
                <entry key="IRR" value="&#xfdfc;"/>
                <entry key="ISK" value="&#x6b;&#x72;"/>
                <entry key="JEP" value="&#xa3;"/>
                <entry key="JMD" value="&#x4a;&#x24;"/>
                <entry key="JPY" value="&#xa5;"/>
                <entry key="KGS" value="&#x43b;&#x432;"/>
                <entry key="KHR" value="&#x17db;"/>
                <entry key="KPW" value="&#x20a9;"/>
                <entry key="KRW" value="&#x20a9;"/>
                <entry key="KYD" value="&#x24;"/>
                <entry key="KZT" value="&#x43b;&#x432;"/>
                <entry key="LAK" value="&#x20ad;"/>
                <entry key="LBP" value="&#xa3;"/>
                <entry key="LKR" value="&#x20a8;"/>
                <entry key="LRD" value="&#x24;"/>
                <entry key="LTL" value="&#x4c;&#x74;"/>
                <entry key="LVL" value="&#x4c;&#x73;"/>
                <entry key="MKD" value="&#x434;&#x435;&#x43d;"/>
                <entry key="MNT" value="&#x20ae;"/>
                <entry key="MUR" value="&#x20a8;"/>
                <entry key="MXN" value="&#x24;"/>
                <entry key="MYR" value="&#x52;&#x4d;"/>
                <entry key="MZN" value="&#x4d;&#x54;"/>
                <entry key="NAD" value="&#x24;"/>
                <entry key="NGN" value="&#x20a6;"/>
                <entry key="NIO" value="&#x43;&#x24;"/>
                <entry key="NOK" value="&#x6b;&#x72;"/>
                <entry key="NPR" value="&#x20a8;"/>
                <entry key="NZD" value="&#x24;"/>
                <entry key="OMR" value="&#xfdfc;"/>
                <entry key="PAB" value="&#x42;&#x2f;&#x2e;"/>
                <entry key="PEN" value="&#x53;&#x2f;&#x2e;"/>
                <entry key="PHP" value="&#x50;&#x68;&#x70;"/>
                <entry key="PKR" value="&#x20a8;"/>
                <entry key="PLN" value="&#x7a;&#x142;"/>
                <entry key="PYG" value="&#x47;&#x73;"/>
                <entry key="QAR" value="&#xfdfc;"/>
                <entry key="RON" value="&#x6c;&#x65;&#x69;"/>
                <entry key="RSD" value="&#x414;&#x438;&#x43d;&#x2e;"/>
                <entry key="RUB" value="&#x440;&#x443;&#x431;"/>
                <entry key="SAR" value="&#xfdfc;"/>
                <entry key="SBD" value="&#x24;"/>
                <entry key="SCR" value="&#x20a8;"/>
                <entry key="SEK" value="&#x6b;&#x72;"/>
                <entry key="SGD" value="&#x24;"/>
                <entry key="SHP" value="&#xa3;"/>
                <entry key="SOS" value="&#x53;"/>
                <entry key="SRD" value="&#x24;"/>
                <entry key="SVC" value="&#x24;"/>
                <entry key="SYP" value="&#xa3;"/>
                <entry key="THB" value="&#xe3f;"/>
                <entry key="TRL" value="&#x20a4;"/>
                <entry key="TRY" value="&#x54;&#x4c;"/>
                <entry key="TTD" value="&#x54;&#x54;&#x24;"/>
                <entry key="TVD" value="&#x24;"/>
                <entry key="TWD" value="&#x4e;&#x54;&#x24;"/>
                <entry key="UAH" value="&#1075;&#1088;&#1085;."/>
                <!-- not all browser supoprt &#x20b4; -->
                <entry key="USD" value="&#x0443;.&#x0435;."/>
                <!--                <entry key="USD" value="&#x24;"/>-->
                <entry key="UYU" value="&#x24;&#x55;"/>
                <entry key="UZS" value="&#x43b;&#x432;"/>
                <entry key="VEF" value="&#x42;&#x73;"/>
                <entry key="VND" value="&#x20ab;"/>
                <entry key="XCD" value="&#x24;"/>
                <entry key="YER" value="&#xfdfc;"/>
                <entry key="ZAR" value="&#x52;"/>
                <entry key="ZWD" value="&#x5a;&#x24;"/>
            </map>
        </constructor-arg>
    </bean>

    <!-- ################################## Category , Product and Sku image services begin ######################## -->
    <bean id="categoryImageAttributeStrategy"
          class="org.yes.cart.web.support.service.impl.CategoryImageRetrieveStrategyAttributeImpl">
        <constructor-arg index="0" value="CATEGORY_IMAGE"/>
    </bean>

    <bean id="categoryImageRandomProduct"
          class="org.yes.cart.web.support.service.impl.CategoryImageRetrieveStrategyRandomProductImpl">
        <constructor-arg index="0" ref="productService"/>
        <constructor-arg index="1" value="IMAGE0"/>
    </bean>

    <bean id="categoryImageService" class="org.yes.cart.web.support.service.impl.CategoryImageServiceImpl">
        <constructor-arg index="0">
            <map>
                <entry key="ATTRIBUTE" value-ref="categoryImageAttributeStrategy"/>
                <entry key="RANDOM_PRODUCT" value-ref="categoryImageRandomProduct"/>
            </map>
        </constructor-arg>
        <constructor-arg index="1" ref="categoryService"/>
        <constructor-arg index="2" value="RANDOM_PRODUCT"/>
        <!-- one of the allowed stategy label -->
    </bean>

    <bean id="attributableImageService" class="org.yes.cart.web.support.service.impl.AttributableImageServiceImpl"/>
    <!-- ############################ Category , Product and Sku image services end ############################### -->

    <bean id="wicketUtil" class="org.yes.cart.web.util.WicketUtil">
        <property name="cmdKeys">
            <list>
                <value>addToCartCmd</value>
                <value>changeCurrencyCmd</value>
                <value>changeLocaleCmd</value>
                <value>cleanCartCmd</value>
                <value>expireCartCmd</value>
                <value>loginCmd</value>
                <value>logoutCmd</value>
                <value>removeAllSkuCmd</value>
                <value>removeOneSkuCmd</value>
                <value>setBillingAddressSeparateCmd</value>
                <value>setCarrierSlaCmd</value>
                <value>setMultipleDeliveryCmd</value>
                <value>setShopIdCmd</value>
                <value>setQuantityToCartCmd</value>
            </list>
        </property>
    </bean>

    <bean id="seoBookmarkablePageParametersEncoder" class="org.yes.cart.web.util.SeoBookmarkablePageParametersEncoder">
        <constructor-arg index="0" ref="categoryService"/>
        <constructor-arg index="1" ref="productService"/>
        <constructor-arg index="2" value="true"/>
        <!-- is seo url rewriting enabled -->

    </bean>


    <!-- ########################################### HornetQ configuration begin  ################################# -->

    <bean name="mbeanServer" class="java.lang.management.ManagementFactory" factory-method="getPlatformMBeanServer"/>
    <bean name="hornetQSecurityManagerImpl" class="org.hornetq.spi.core.security.HornetQSecurityManagerImpl"/>
    <bean name="fileConfiguration" class="org.hornetq.core.config.impl.FileConfiguration" init-method="start"
          destroy-method="stop">
        <property name="journalType" value="NIO"/>
        <property name="pagingDirectory"
                  value="#{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart'+systemProperties['file.separator']+'hornetq'+systemProperties['file.separator']+'storefront'+systemProperties['file.separator']+'paging'}"/>
        <property name="bindingsDirectory"
                  value="#{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart'+systemProperties['file.separator']+'hornetq'+systemProperties['file.separator']+'storefront'+systemProperties['file.separator']+'bindings'}"/>
        <property name="largeMessagesDirectory"
                  value="#{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart'+systemProperties['file.separator']+'hornetq'+systemProperties['file.separator']+'storefront'+systemProperties['file.separator']+'large-messages'}"/>
        <property name="journalDirectory"
                  value="#{systemProperties['java.io.tmpdir']+systemProperties['file.separator']+'yes-cart'+systemProperties['file.separator']+'hornetq'+systemProperties['file.separator']+'storefront'+systemProperties['file.separator']+'journal'}"/>
    </bean>

    <!-- The core server -->
    <bean name="hornetQServerImpl" class="org.hornetq.core.server.impl.HornetQServerImpl">
        <constructor-arg ref="fileConfiguration"/>
        <constructor-arg ref="mbeanServer"/>
        <constructor-arg ref="hornetQSecurityManagerImpl"/>
    </bean>

    <!-- The JMS server -->

    <bean name="jmsServerManagerImpl" class="org.hornetq.jms.server.impl.JMSServerManagerImpl" init-method="start"
          destroy-method="stop">
        <constructor-arg ref="hornetQServerImpl"/>
    </bean>
    <bean id="inVmConnectionFactory" class="org.hornetq.jms.client.HornetQConnectionFactory">
        <constructor-arg value="false"/>
        <constructor-arg ref="inVmTransportConfiguration"/>
    </bean>
    <bean id="inVmTransportConfiguration" class="org.hornetq.api.core.TransportConfiguration">
        <constructor-arg index="0" value="org.hornetq.core.remoting.impl.invm.InVMConnectorFactory"/>
    </bean>


    <!-- ########################################### HornetQ configuration end  ################################# -->


    <!-- #################################### queues and jms templates begin ###############################-->

    <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
        <property name="environment">
            <props>
                <prop key="java.naming.factory.initial">org.apache.naming.java.javaURLContextFactory</prop>
                <prop key="java.naming.factory.url.pkgs">org.apache.naming</prop>
            </props>
        </property>
    </bean>

    <bean id="jmsQueueConnectionFactory" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate" ref="jndiTemplate"/>
        <property name="jndiName" value="HQConnectionFactory"/>
    </bean>


    <bean id="customerRegistrationQueue" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate" ref="jndiTemplate"/>
        <property name="jndiName" value="queue/CustomerRegistrationQueue"/>
    </bean>

    <bean id="customerRegistrationJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsQueueConnectionFactory"/>
        <property name="defaultDestination" ref="customerRegistrationQueue"/>
    </bean>


    <!-- #################################### queues and jms templates end ###############################-->


    <!-- #################################  aspects configurations begin ######################################-->

    <bean id="customerRegistrationAspect" class="org.yes.cart.web.aspect.RegistrationAspect">
        <constructor-arg index="0" ref="customerRegistrationJMSTemplate"/>
        <constructor-arg index="1" ref="passPhraseGenerator"/>
        <constructor-arg index="2" ref="passwordHashHelper"/>
    </bean>

    <!-- #################################  aspects configurations end ######################################-->


    <!-- #################################  message consumers begin ######################################-->

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="localhost"/>
        <property name="port" value="25"/>
        <property name="username" value="yourusername"/>
        <property name="password" value="yourpassword"/>
        <property name="javaMailProperties">
            <props>
                <!-- Use SMTP-AUTH to authenticate to SMTP server -->
                <!--<prop key="mail.smtp.auth">true</prop>-->
                <!-- Use TLS to encrypt communication with SMTP server -->
                <prop key="mail.smtp.starttls.enable">true</prop>
            </props>
        </property>
    </bean>


    <!-- send notification with new customer account information and password -->
    <bean id="customerRegistrationListener"
          class="org.yes.cart.domain.message.consumer.CustomerRegistrationMessageListener">
        <constructor-arg index="0" type="org.springframework.mail.javamail.JavaMailSender" ref="mailSender"/>
        <constructor-arg index="1" type="org.yes.cart.service.mail.MailComposer" ref="mailComposer"/>
    </bean>

    <bean id="customerRegistrationJmsContainer"
          class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="jmsQueueConnectionFactory"/>
        <property name="destination" ref="customerRegistrationQueue"/>
        <property name="messageListener" ref="customerRegistrationListener"/>
        <property name="sessionTransacted" value="true"/>
    </bean>

    <!-- #################################  message consumers end ######################################-->


</beans>