<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Igor Azarnyi, Denys Pavlov
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<web-app version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <display-name>Yes cart</display-name>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webapp.yes.cart</param-value>
    </context-param>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>WEB-INF/applicationContext.xml</param-value>
    </context-param>

    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>WEB-INF/log4j.properties</param-value>
    </context-param>


    <listener>
        <listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
    </listener>

    <listener>
        <listener-class>
            org.springframework.security.web.session.HttpSessionEventPublisher
        </listener-class>
    </listener>

    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>shoppingCartFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>excludePattern</param-name>
            <param-value>services/(backdoor|cachedirector)</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>shopResolverFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>excludePattern</param-name>
            <param-value>services/(backdoor|cachedirector)</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>liqPayCallBackFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>paymentGatewayLabel</param-name>
            <param-value>liqPayPaymentGatewayLabel</param-value>
        </init-param>
        <init-param>
            <param-name>allowedIPs</param-name>
            <param-value></param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>anetPaymentCallBackFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>paymentGatewayLabel</param-name>
            <param-value>authorizeNetSimPaymentGatewayLabel</param-value>
        </init-param>
        <init-param>
            <param-name>allowedIPs</param-name>
            <param-value></param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>payPalExpressCheckoutFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>allowedIPs</param-name>
            <param-value></param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>googleCheckoutCallBackFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>paymentGatewayLabel</param-name>
            <param-value>googleCheckoutPaymentGatewayLabel</param-value>
        </init-param>
        <init-param>
            <param-name>allowedIPs</param-name>
            <param-value></param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>imageFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetFilterLifecycle</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>wicketFilter</filter-name>
        <filter-class>org.apache.wicket.protocol.http.WicketFilter</filter-class>
        <init-param>
            <param-name>applicationClassName</param-name>
            <param-value>org.yes.cart.web.application.StorefrontApplication</param-value>
        </init-param>
        <init-param>
            <param-name>configuration</param-name>
            <param-value>deployment</param-value>
        </init-param>
        <init-param>
            <param-name>ignorePaths</param-name>
            <param-value>services/,js/</param-value>
        </init-param>
        <init-param>
            <param-name>secureMode</param-name>
            <!--
            false security not need at all, for example intranet.
            true in case if we are run with ssl support, regardles where the ssl ofloaded
            on web of htt server.
            -->
            <param-value>${wicket.security.enabled}</param-value>
        </init-param>
        <init-param>
            <param-name>securePort</param-name>
            <param-value>${wicket.secure.port}</param-value>
        </init-param>
        <init-param>
            <param-name>unsecurePort</param-name>
            <param-value>${wicket.unsecure.port}</param-value>
        </init-param>
    </filter>


    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>shoppingCartFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>shopResolverFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!--
    Liq Pay call back filter.
    For security reason change default mapping.
    -->
    <filter-mapping>
        <filter-name>liqPayCallBackFilter</filter-name>
        <url-pattern>/liqpaycallback</url-pattern>
    </filter-mapping>

    <!--
    Authorize net call back filter.
    For security reason change default mapping.
    -->
    <filter-mapping>
        <filter-name>anetPaymentCallBackFilter</filter-name>
        <url-pattern>/authnetsimcallback</url-pattern>
    </filter-mapping>

    <!--
    Paypal express checkout call back filter.
    For security reason change default mapping.
    -->
    <filter-mapping>
        <filter-name>payPalExpressCheckoutFilter</filter-name>
        <url-pattern>/paymentpaypalexpress</url-pattern>
    </filter-mapping>

    <!--
    Mapping of goggle checkout call back filter.
    For security reason change default mapping.
    -->
    <filter-mapping>
        <filter-name>googleCheckoutCallBackFilter</filter-name>
        <url-pattern>/googlecheckoutcallback</url-pattern>
    </filter-mapping>

    <!-- product, sku and brand images filter -->
    <filter-mapping>
        <filter-name>imageFilter</filter-name>
        <url-pattern>/imgvault/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>wicketFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>



    <servlet>
        <servlet-name>cxf</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>cxf</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>


    <!--<servlet>
        <servlet-name>spring-ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
    </servlet>-->

    <!--<servlet-mapping>
        <servlet-name>spring-ws</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>-->

    <!-- Datasource Configuration -->
    <resource-ref>
        <description>Database connection</description>
        <res-ref-name>jdbc/yesjndi</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>


</web-app>